---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "../components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../assets/hero-screenshot.png";
import IntegrationImg from "../assets/integrations.svg?url";
import FeatureImgOne from "../assets/features/2.png";
import FeatureImgTwo from "../assets/features/2.png";
import FeatureImgThree from "../assets/features/3.png";
import FeatureImg1 from "../assets/features/6.png";
import FeatureImg2 from "../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../assets/employee.jpg";


// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});


const data = [
  {
    "mainHeading": "Scale Your Startup with Empress",
    "subtext": "Fuel your startup's growth with agile content management and user experience tools.",
    "headingButtons": [
      {
        "text": "Get Started",
        "link": "https://app.empress.eco/admin/login"
      },
      {
        "text": "Contact Sales",
        "link": "/contact"
      }
    ],
    "sectionHeading": "Empower Your Startup with Empress",
    "offering": {
      "title": "Agile Solutions for Rapid Scaling",
      "subtext": "Intuitive tools and insights tailored for startups to drive growth and improve user engagement."
    },
    "valueBlocks": [
      {
        "heading": "Content Mastery",
        "title": "From Idea to Launch",
        "description": "Equip your team with tools that streamline experience creation and optimization, ensuring your message resonates."
      },
      {
        "heading": "Bot-Powered Engagement",
        "title": "Optimize User Interactions",
        "description": "Our Smart Bot adapts to user behaviors, ensuring your startup maintains dynamic and engaging conversations."
      },
      {
        "heading": "Experience Analytics",
        "title": "Data-Driven Decisions",
        "description": "Gain real-time insights from user interactions and make informed decisions that align with your startup's goals."
      }
    ],
    "featureBlocks": [
      {
        "heading": "Startup-Centric Design",
        "title": "Tools that Scale with You",
        "description": "From MVP to market leader, Empress provides the flexibility and scalability startups need for consistent growth.",
        "bulletPoints": [
          "Automated workflows for startups.",
          "Adaptive design for evolving needs.",
          "Robust infrastructure that supports rapid growth."
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "https://app.empress.eco/admin/login"
          },
          {
            "text": "Contact Sales",
            "link": "/contact"
          }
        ],
      },
      {
        "heading": "Engagement Insights",
        "title": "Deep Dive into User Behavior",
        "description": "Harness the potential of data-driven insights. Understand your audience better and optimize engagement strategies.",
        "bulletPoints": [
          "In-depth analysis of user interactions.",
          "Optimize strategies based on real-time feedback.",
          "Anticipate user needs and stay a step ahead."
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "https://app.empress.eco/admin/login"
          },
          {
            "text": "Contact Sales",
            "link": "/contact"
          }
        ],
      },
      {
    "heading": "Adaptive Learning & Personalization",
    "title": "Tailored Experiences for Every User",
    "description": "Empress leverages advanced AI to learn from each user interaction, offering personalized experiences that increase engagement and loyalty.",
    "bulletPoints": [
      "Adaptive algorithms that learn from user behavior.",
      "Personalized content delivery for enhanced relevance.",
      "Real-time adaptation ensuring consistent user delight."
    ],
    "buttons": [
      {
        "text": "Get Started",
        "link": "https://app.empress.eco/admin/login"
      },
      {
        "text": "Contact Sales",
        "link": "/contact"
      }
    ],
}
    ],
    
    "featureHeading": "Startup-Focused Functionality",
    "featureTitle": "Unleash Your Potential",
    "featureAssurance": "Adopt a platform designed to grow and evolve as your startup does, offering seamless functionality at every step."
  }
];

const features = [
  {
    "title": "Agile Content Toolkit",
    "description": "Streamline your startup's content flow, from ideation to distribution, with tools designed for rapid growth.",
    "icon": "fluent:document-javascript-24-regular",
  },
  {
    "title": "Bot-Driven User Engagement",
    "description": "Enhance user engagement with our adaptive Smart Bot, ensuring personalized interactions across all platforms.",
    "icon": "fluent:document-javascript-24-regular",
  },
  {
    "title": "Insightful User Analytics",
    "description": "Get a pulse on your audience's preferences and adapt in real-time to ensure your startup stays ahead of the curve.",
    "icon": "fluent:document-javascript-24-regular",
  },
  {
    "title": "Unified Data Landscape",
    "description": "Leverage a cohesive data ecosystem to draw insights, helping your startup make data-informed decisions.",
    "icon": "fluent:data-sunburst-24-regular",
  },
  {
    "title": "AI-Driven Market Predictions",
    "description": "Empress's AI provides timely insights, helping startups navigate market trends and user preferences.",
    "icon": "fluent:trophy-24-regular",
  },
  {
    "title": "Dynamic User Interface",
    "description": "A responsive and adaptive interface ensures that as your startup grows, Empress evolves with you.",
    "icon": "fluent:document-javascript-24-regular",
  }
];

const faq = [
  {
    question: "Is Empress suitable for early-stage startups?",
    answer: "Absolutely! Empress is designed with startups at all growth stages in mind. Our tools are flexible, allowing you to start small and scale efficiently as your startup grows."
  },
  {
    question: "How quickly can we onboard and integrate Empress into our workflow?",
    answer: "With Empress's user-friendly interface and seamless integrations, most startups can be up and running in just a few days. Our team also provides dedicated support to ensure a smooth onboarding process."
  },
  {
    question: "Does the Smart Bot require a lot of training to be effective?",
    answer: "Our Smart Bot comes with a foundational level of intelligence. However, its adaptive algorithms allow it to learn quickly from user interactions, making it more effective over time and specifically tailored to your startup's audience."
  },
  {
    question: "Budget is a concern. How does Empress offer value for our investment?",
    answer: "Empress has a free plan for testing and scales with you. Our features are designed to increase user engagement, streamline processes, and offer actionable insights, ensuring a high ROI for your investment."
  },
  {
    question: "How does Empress assist in making data-driven decisions for our startup?",
    answer: "Empress offers real-time experience analytics, AI-powered market predictions, and a unified data landscape. These tools allow startups to gain deep insights into user behavior, anticipate market shifts, and make informed strategic decisions."
  },
  {
    question: "Is there any specialized support for startups when facing challenges?",
    answer: "Certainly! We understand the unique challenges faced by startups. Empress offers specialized support, along with resources and best practices, to help startups maximize the potential of our platform and drive growth."
  },
  {
    question: "How flexible is the Empress in adapting to our evolving needs?",
    answer: "Empress is built on a dynamic architecture designed for adaptability. As your startup grows and your needs evolve, the platform can be tailored and scaled to match, ensuring you're always equipped with tools and features that align with your current objectives."
}
];




const featureBlocks = data[0].featureBlocks;

---

<Layout title="About" footerMargin={false}>
  <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div
            class="mt-6 flex flex-col sm:flex-row sm:justify-center lg:justify-start gap-3">
          <Link
              href={data[0].headingButtons[0].link}
              target="_blank"
              class="flex gap-1 items-center justify-center bg-brand"
              rel="noopener">
              {data[0].headingButtons[0].text}
          </Link>
          
          <Link
            size="lg"
            style="outline"
            rel="noopener"
            href={data[0].headingButtons[1].link}
            class="flex gap-1 items-center justify-center border-brand text-brand"
            target="_blank">
            {data[0].headingButtons[1].text}
          </Link>
          </div>
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={heroImage}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div>
  

  <Container>
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].sectionHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].offering.title}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].offering.subtext}
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
      <Card color="indigo" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgThree}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[0].heading}</span>
        <span slot="title">{data[0].valueBlocks[0].title}</span>
        <span slot="desc">{data[0].valueBlocks[0].description}</span>
      </Card>
      
      <Card color="purple" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgTwo}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[1].heading}</span>
        <span slot="title">{data[0].valueBlocks[1].title}</span>
        <span slot="desc">{data[0].valueBlocks[1].description}</span>
      </Card>
      
      <Card size="sm">
        <Fragment slot="image">
          <!-- // svg image. cannot use <picture/> as of now -->
          <Image
            src={IntegrationImg}
            alt="Feature image"
            width="909"
            height="823"
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[2].heading}</span>
        <span slot="title">{data[0].valueBlocks[2].title}</span>
        <span slot="desc">{data[0].valueBlocks[2].description}</span>
      </Card>
    </div>



      <!-- FeatureBlock.astro -->
    
      <div class="grid place-items-center">
        {data[0].featureBlocks.map((block) => (
          <div class="grid md:grid-cols-2 py-10">
            <div class="grid place-items-center pb-10 md:pb-0 md:order-2">
              <Picture
                src={FeatureImg1}
                alt="Feature Image"
                formats={["avif", "webp"]}
                loading="lazy"
              />
            </div>
            <div class="grid place-items-center">
              <div class="max-w-lg">
                <Badge color="purple" class="-ml-px">{block.heading}</Badge>
                <h3 class="text-2xl font-medium mt-4 [text-wrap:balance]">
                  {block.title}
                </h3>
                <p class="mt-4 text-slate-600 [text-wrap:balance]">
                  {block.description}
                </p>
                <ul class="grid mt-6 text-left gap-y-4">
                  {block.bulletPoints.map((point) => (
                    <li class="flex items-center gap-3 text-neutral-800">
                      <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                      <span class="text-sm">{point}</span>
                    </li>
                  ))}
                </ul>
                <div class="flex items-center gap-4 mt-6">
                  {block.buttons?.map((button, index) => {
                    if (index === 0) {
                      return (
                        <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                          <span>{button.text}</span>
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                            class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                            <path
                              fill-rule="evenodd"
                              d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                              clip-rule="evenodd"></path>
                          </svg>
                        </Link>
                      );
                    } else {
                      return (
                        <a 
                          href={button.link} 
                          class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                          {button.text}
                        </a>
                      );
                    }
                  })}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

