---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "../components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../assets/hero-screenshot.png";
import IntegrationImg from "../assets/integrations.svg?url";
import FeatureImgOne from "../assets/features/2.png";
import FeatureImgTwo from "../assets/features/2.png";
import FeatureImgThree from "../assets/features/3.png";
import FeatureImg1 from "../assets/features/6.png";
import FeatureImg2 from "../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../assets/employee.jpg";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import DataAnalysisVRTechnology from "../assets/features/data-analysis-using-vr-technology.svg";


// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});


const data = [
{
  "mainHeading": "Connect Information to Inspiration",
  "subtext": "Track, optimize, and predict user behaviors. Transform every interaction with real-time, data-driven insights.",
  "headingButtons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "Contact Us",
      "link": "/contact"
    }
  ],
  "sectionHeading": "Empress Insights",
  "offering": {
    "title": "The Heartbeat of Data-Driven Decisions",
    "subtext": "Turn every user interaction into a goldmine of data. Extract, analyze, and leverage insights for strategic growth and enhanced ROI."
  },
  "valueBlocks": [
    {
      "heading": "Insight",
      "title": "Beyond Surface-Level Analysis",
      "description": "Delve deep into user behaviors, capturing nuances and identifying patterns to inform and transform strategies."
    },
    {
      "heading": "Predictability",
      "title": "Stay Ahead with Predictive Analytics",
      "description": "Harness the power of AI to foresee user behaviors, ensuring you're always a step ahead in your engagement strategy."
    },
    {
      "heading": "Optimization",
      "title": "Continuous Experience Refinement",
      "description": "Empower your strategies with real-time feedback loops. Refine and retune experiences for unparalleled user engagement."
    }
  ],
  "featureBlocks": [
    {
      "heading": "Dynamic Data Collection",
      "title": "Dive into Comprehensive Behavior Insights",
      "description": "Seamlessly capture every interaction, every click, every movement. Convert vast amounts of data into actionable strategies.",
      "bulletPoints": [
        "Real-time User Behavior Tracking",
        "Segmented Audience Insights",
        "Cross-Platform Data Aggregation"
      ],
      "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "Contact Sales",
            "link": "/contact"
          }
      ]
    },
    {
      "heading": "Advanced Analytics Suite",
      "title": "Easily Navigate Complex User Journeys",
      "description": "Bring clarity to the chaos. Transform raw data into clear visualizations, reports, and actionable recommendations.",
      "bulletPoints": [
        "User Journey Mapping",
        "Behavior Heatmaps",
        "Customizable Data Dashboards"
      ],
      "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "Contact Sales",
            "link": "/contact"
          }
      ]
    },
    {
      "heading": "AI-Powered Predictions",
      "title": "Shape Tomorrow's Strategies Today",
      "description": "Stay ahead of the curve. Leverage AI-driven insights to predict trends, anticipate user needs, and ensure your strategy evolves in real-time.",
      "bulletPoints": [
        "Behavioral Forecasting",
        "Trend Identification",
        "Predictive Experience Modeling"
      ],
      "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "Contact Sales",
            "link": "/contact"
          }
      ]
    },
  ],
  "buttons": [
          {
            "text": "Dive Deeper",
            "link": "/contact"
          },
          {
            "text": "Reach Out Now",
            "link": "/contact"
          }
  ],
  "featureHeading": "Optimizing Every Data Point",
  "featureTitle": "Elevate with Every Insight",
  "featureAssurance": "With Experience-as-a-Service, it's not about merely tracking; it's about understanding, anticipating, and evolving. Turn insights into unmatched experiences."
}
];

const features = [
  {
    "title": "Real-time Data Capture",
    "description": "Every click, every interaction, every moment – captured in real-time, offering a comprehensive view of user behaviors.",
    "icon": "fluent:clock-24-regular",
  },
  {
    "title": "Seamless Integration",
    "description": "Embed Experience-as-a-Service effortlessly into your Empress OS and Smart Bots ecosystem, ensuring no interaction goes unnoticed.",
    "icon": "fluent:connector-24-regular",
  },
  {
    "title": "Unified Analytics Dashboard",
    "description": "From aggregated data to nuanced insights – access it all in one centralized, intuitive dashboard.",
    "icon": "fluent:cellular-data-1-24-regular",
  },
  {
    "title": "Predictive AI Modeling",
    "description": "Beyond tracking – anticipate user behaviors, forecast trends, and stay ahead with AI-driven predictions.",
    "icon": "fluent:bot-24-regular",
  },
  {
    "title": "Actionable Recommendations",
    "description": "Convert data into strategy. Receive tailored recommendations to refine and elevate every user experience.",
    "icon": "fluent:thumb-like-24-regular",
  },
  {
    "title": "Optimization Opportunities",
    "description": "Never remain stagnant. Use real-time feedback loops to continuously evolve and optimize your strategies for maximum engagement.",
    "icon": "fluent:mobile-optimized-24-regular",
  }
];


const faq = [
  {
    question: "How does Experience-as-a-Service (EaaS) enhance my business?",
    answer: "Experience-as-a-Service acts as the data-driven heartbeat of Empress OS, ensuring every touchpoint is not just tracked, but understood. It captures real-time interactions, transforming them into insights that refine and elevate each experience crafted within Empress OS."
  },
  {
    question: "What unique benefits does Experience-as-a-Service offer?",
    answer: "Beyond real-time data capture, Experience-as-a-Service offers predictive AI modeling to anticipate user behaviors, actionable recommendations for strategy refinement, and optimization opportunities to ensure your engagement strategies are always evolving."
  },
  {
    question: "How does EaaS fit into the broader ecosystem of Empress offerings?",
    answer: "It seamlessly integrates with Empress OS and Smart Bots, creating a unified analytics dashboard. Whether an interaction takes place within Empress OS or through Smart Bots, Experience-as-a-Service meticulously tracks and extracts valuable insights to refine and empower your strategies."
  },
  {
    question: "What role do Smart Bots play with Experience-as-a-Service?",
    answer: "Smart Bots serve as brand ambassadors, delivering experiences crafted in Empress OS. Each interaction they facilitate is tracked by Experience-as-a-Service, creating a feedback loop that refines audience engagement and ensures a more personalized, memorable interaction for your users."
  },
  {
    question: "How can I utilize the predictive AI capabilities of EaaS?",
    answer: "With features like Behavioral Forecasting and Trend Identification, our AI-powered predictions allow you to stay ahead of the curve, ensuring your strategies evolve in real-time to meet and anticipate user needs."
  },
  {
    question: "Can EaaS help optimize experiences across different devices?",
    answer: "Absolutely. Experience-as-a-Service ensures that insights derived from user interactions are consistent and optimized, regardless of the device used, be it desktop, tablet, or mobile."
  },
  {
    question: "How does the dashboard in EaaS simplify my data insights?",
    answer: "The Unified Analytics Dashboard aggregates your data from Empress OS and Smart Bots, converting it into clear visualizations, reports, and actionable recommendations. It provides a holistic, centralized view, making it easier to understand and act upon user engagements."
  }
];



const featureBlocks = data[0].featureBlocks;

---

<Layout title="About" footerMargin={false}>
  <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div
            class="mt-6 flex flex-col sm:flex-row sm:justify-center lg:justify-start gap-3">
          <Link
              href={data[0].headingButtons[0].link}
              class="flex gap-1 items-center justify-center bg-brand"
              rel="noopener">
              {data[0].headingButtons[0].text}
          </Link>
          
          <Link
            size="lg"
            style="outline"
            rel="noopener"
            href={data[0].headingButtons[1].link}
            class="flex gap-1 items-center justify-center border-brand text-brand">
            {data[0].headingButtons[1].text}
          </Link>
          </div>
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={DataAnalysisVRTechnology}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div>
  

  <Container>
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].sectionHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].offering.title}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].offering.subtext}
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
      <Card color="indigo" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgThree}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[0].heading}</span>
        <span slot="title">{data[0].valueBlocks[0].title}</span>
        <span slot="desc">{data[0].valueBlocks[0].description}</span>
      </Card>
      
      <Card color="purple" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgTwo}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[1].heading}</span>
        <span slot="title">{data[0].valueBlocks[1].title}</span>
        <span slot="desc">{data[0].valueBlocks[1].description}</span>
      </Card>
      
      <Card size="sm">
        <Fragment slot="image">
          <!-- // svg image. cannot use <picture/> as of now -->
          <Image
            src={IntegrationImg}
            alt="Feature image"
            width="909"
            height="823"
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[2].heading}</span>
        <span slot="title">{data[0].valueBlocks[2].title}</span>
        <span slot="desc">{data[0].valueBlocks[2].description}</span>
      </Card>
    </div>

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../public/analytical-report-2.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="">
        <LottieAnimation id="lottie" src="../../public/space-hologram.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>

      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[1].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-6">
          {data[0].featureBlocks[2].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                  <span>{button.text}</span>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                    <path
                      fill-rule="evenodd"
                      d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                      clip-rule="evenodd"></path>
                  </svg>
                </Link>
              );
            } else {
              return (
                <a 
                  href={button.link} 
                  class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                  {button.text}
                </a>
              );
            }
          })}
        </div>
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../public/pie-graph.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

