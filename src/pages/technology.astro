---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "../components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../assets/hero-screenshot.png";
import IntegrationImg from "../assets/integrations.svg?url";
import FeatureImgOne from "../assets/features/2.png";
import FeatureImgTwo from "../assets/features/2.png";
import FeatureImgThree from "../assets/features/3.png";
import FeatureImg1 from "../assets/features/6.png";
import FeatureImg2 from "../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../assets/employee.jpg";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import AutomatedDroneDelivery from "../assets/features/automated-drone-delivery-shipment-of-internet-order.svg";


// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});


const data = [
    {
        "mainHeading": "Drive Innovations with Empress",
        "subtext": "Develop, Implement, and Optimize User Content for Enhanced Tech Interaction and Product Utilization.",
        "headingButtons": [
            {
              "text": "Get Started",
              "link": "/contact"
            },
            {
                "text": "Contact Sales",
                "link": "/contact"
            }
        ],
        "sectionHeading": "Empress for Tech",
        "offering": {
            "title": "Accelerate Your User Adoption",
            "subtext": "From ideation to actionable insights, amplify your user experience with our all-inclusive platform."
        },
        "valueBlocks": [
    {
        "heading": "Empress OS",
        "title": "Streamline Innovation",
        "description": "Accesss centralized content management that fosters collaborative developments and speeds up the project lifecycle."
    },
    {
        "heading": "Empress Chat",
        "title": "Stay Seamlessly Connected",
        "description": "Ensure real-time, informed, and effective interactions between developers, stakeholders, and end-users."
    },
    {
        "heading": "Empress Insights",
        "title": "Unlock Actionable Insights",
        "description": "Gain a competitive edge through cutting-edge analytics, understand user behavior, and optimize product performance."
    }
],
        "featureBlocks": [
        {
  "heading": "OS for Tech",
  "title": "Empower Your Technology Innovations",
  "description": "With Empress OS, tech firms can centralize their innovative content, foster collaborative developments, and deliver projects with optimized efficiency.",
  "bulletPoints": [
    "Manage tech documentation and assets with ease.",
    "Enhance collaboration among developer and product teams.",
    "Accelerate tech project lifecycles with streamlined workflows."
  ],
  "buttons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "Contact Sales",
      "link": "/contact"
    }
  ]
},
{
  "heading": "Chat for Tech",
  "title": "Intelligent Engagement for Tech Teams",
  "description": "Empress Chat bridges the communication divide, ensuring that tech teams and their stakeholders stay seamlessly connected, informed, and empowered in real-time.",
  "bulletPoints": [
    "Instantly address tech-related queries and streamline project updates.",
    "Enhance collaboration between developers, stakeholders, and users.",
    "Gather feedback and insights to drive tech product improvements."
  ],
  "buttons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "Contact Sales",
      "link": "/contact"
    }
  ]
},
{
  "heading": "Insights for Tech",
  "title": "Drive Data-Driven Excellence in Technology",
  "description": "Empress Insights equips tech enterprises with cutting-edge analytics, enabling a deeper understanding of user behaviors, product performance, and emerging tech trends.",
  "bulletPoints": [
    "Decipher complex data for actionable product development strategies.",
    "Monitor and optimize user experience across various tech platforms.",
    "Stay ahead with predictive analytics and tech market trend analysis."
  ],
  "buttons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "Contact Sales",
      "link": "/contact"
    }
  ]
},

        ],
        "featureHeading": "Features for Tech",
        "featureTitle": " We're Here to Support You",
        "featureAssurance": "Maximize efficiency with our extensive range of integrations, complemented by Empress's exclusive, feature-rich enhancements."
    }
];

const features = [
    {
        "title": "Integrated Tech Ecosystem",
        "description": "Seamlessly connect your team to 200+ essential tools. Simplify operations and pave the way for business growth in the tech landscape.",
        "icon": "fluent:plug-connected-24-regular"
    },
    {
        "title": "Advanced Insights Dashboard",
        "description": "Provide your team with crucial, data-driven insights. Decode user behaviors and preferences, ensuring optimal engagement and user acquisition.",
        "icon": "fluent:data-usage-24-regular"
    },
    {
        "title": "AI-Powered Recommendations",
        "description": "Deliver AI-enhanced recommendations for superior user experiences. Make decisions backed by data, ensuring greater user retention.",
        "icon": "fluent:bot-24-regular"
    },
    {
        "title": "Cross-Platform Consistency",
        "description": "Guarantee users a cohesive experience across platforms and devices. Cultivate user trust and capitalize on referral opportunities.",
        "icon": "fluent:arrow-expand-24-regular"
    },
    {
        "title": "24/7 Information Hub",
        "description": "Offer uninterrupted access to critical information for your team and users, guaranteeing consistent productivity and engagement.",
        "icon": "fluent:clock-24-regular"
    },
    {
        "title": "Synchronized Software Upgrades",
        "description": "Quickly align your software updates with the latest information you provide, ensuring users are always up to date.",
        "icon": "fluent:arrow-clockwise-dashes-24-regular"
    }
];

const faq = [
  {
    question: "How does Empress enhance my tech workflow?",
    answer: "Our platform streamlines the entire process from content creation to insightful optimization. It's designed to dovetail with tech workflows, helping teams manage content more efficiently, make informed decisions, and optimize for maximum engagement."
  },
  {
    question: "What platforms and languages does the Smart Bot support?",
    answer: "Our Smart Bot is versatile and supports multiple platforms and languages, ensuring real-time data access and sharing irrespective of your tech stack or user base demographics."
  },
  {
    question: "How can the Experience API boost my product's user experience?",
    answer: "The Experience API (xAPI) captures real-time insights from each Smart Bot interaction, allowing you to understand user behaviors, preferences, and pain points. By leveraging these insights, you can enhance user experiences, make more informed design decisions, and drive user retention."
  },
  {
    question: "What integrations does Empress offer for tech businesses?",
    answer: "We offer a wide range of integrations tailored for the tech industry, complemented by Empress's exclusive features. Our integrations aim to maximize efficiency and provide a seamless connection with the tools and platforms most commonly used in the tech sector."
  },
  {
    question: "How do AI-Powered Recommendations benefit tech businesses?",
    answer: "Our AI-Powered Recommendations provide actionable insights based on data-driven analysis. For tech businesses, this means offering superior user experiences, tailoring solutions based on user behaviors, and making decisions that lead to better product development and higher user retention."
  },
  {
    question: "Can Empress ensure a consistent user experience across multiple platforms?",
    answer: "Absolutely. One of our core offerings focuses on Cross-Platform Consistency. We ensure that users enjoy a harmonious experience regardless of the platform or device they use, cultivating trust and boosting user satisfaction."
  },
  {
    question: "What support is available for teams transitioning to Empress?",
    answer: "We provide 24/7 access to our information hub, ensuring uninterrupted support. Whether it's technical assistance, training materials, or best practice guidelines, our resources are available round-the-clock to assist teams during the transition and beyond."
  }
];




const featureBlocks = data[0].featureBlocks;

---

<Layout title="About" footerMargin={false}>
  <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div
            class="mt-6 flex flex-col sm:flex-row sm:justify-center lg:justify-start gap-3">
          <Link
              href={data[0].headingButtons[0].link}
              class="flex gap-1 items-center justify-center bg-brand"
              rel="noopener">
              {data[0].headingButtons[0].text}
          </Link>
          
          <Link
            size="lg"
            style="outline"
            rel="noopener"
            href={data[0].headingButtons[1].link}
            class="flex gap-1 items-center justify-center border-brand text-brand">
            {data[0].headingButtons[1].text}
          </Link>
          </div>
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={AutomatedDroneDelivery}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div>
  

  <Container>
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].sectionHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].offering.title}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].offering.subtext}
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
      <Card color="indigo" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgThree}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[0].heading}</span>
        <span slot="title">{data[0].valueBlocks[0].title}</span>
        <span slot="desc">{data[0].valueBlocks[0].description}</span>
      </Card>
      
      <Card color="purple" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgTwo}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[1].heading}</span>
        <span slot="title">{data[0].valueBlocks[1].title}</span>
        <span slot="desc">{data[0].valueBlocks[1].description}</span>
      </Card>
      
      <Card size="sm">
        <Fragment slot="image">
          <!-- // svg image. cannot use <picture/> as of now -->
          <Image
            src={IntegrationImg}
            alt="Feature image"
            width="909"
            height="823"
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[2].heading}</span>
        <span slot="title">{data[0].valueBlocks[2].title}</span>
        <span slot="desc">{data[0].valueBlocks[2].description}</span>
      </Card>
    </div>

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../public/db-connection.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="">
        <LottieAnimation id="lottie" src="../../public/business-robot.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>

      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[1].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-6">
          {data[0].featureBlocks[2].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                  <span>{button.text}</span>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                    <path
                      fill-rule="evenodd"
                      d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                      clip-rule="evenodd"></path>
                  </svg>
                </Link>
              );
            } else {
              return (
                <a 
                  href={button.link} 
                  class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                  {button.text}
                </a>
              );
            }
          })}
        </div>
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../public/cloud-network.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

