---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "../components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../assets/hero-screenshot.png";
import IntegrationImg from "../assets/integrations.svg?url";
import FeatureImgOne from "../assets/features/2.png";
import FeatureImgTwo from "../assets/features/2.png";
import FeatureImgThree from "../assets/features/3.png";
import FeatureImg1 from "../assets/features/6.png";
import FeatureImg2 from "../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../assets/employee.jpg";


// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});


const data = [
  {
    "mainHeading": "Meet Your Digital Ambassador",
    "subtext": "Experience the fusion of AI precision with genuine human-like engagements. Forge memorable connections, every interaction.",
    "headingButtons": [
      {
        "text": "Get Started",
        "link": "/contact"
      },
      {
        "text": "Contact Sales",
        "link": "/contact"
      }
    ],
    "sectionHeading": "Transform Digital Experiences",
    "offering": {
      "title": "Turn Content into Conversations",
      "subtext": "Craft distinct experiences tailored for each user."
    },
    "valueBlocks": [
      {
        "heading": "Strategic Engagement",
        "title": "Personalized Dialogues",
        "description": "Smart Bots resonate with your brand's ethos, curating interactions that feel deeply personalized."
      },
      {
        "heading": "Seamless Accessibility",
        "title": "Instant Content Reach",
        "description": "With Smart Bots, your content is always at the fingertips of your audience, sparking valuable touchpoints."
      },
      {
        "heading": "Dynamic Interaction",
        "title": "Engagement Amplified",
        "description": "Leverage the power of AI to respond and evolve based on user behavior, nurturing richer connections."
      }
    ],
    "featureBlocks": [
      {
        "heading": "Unified Brand Expression",
        "title": "A Cohesive Brand Journey",
        "description": "Be it web, mobile, or external platforms, Smart Bots ensure your brand message remains undiluted and authentic.",
        "bulletPoints": [
          "Turn Content into Engaging Dialogues",
          "Monitor User Behavior in Real-Time",
          "Offer Tailored Content Recommendations"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "Contact Sales",
            "link": "/contact"
          }
        ],
      },
      {
        "heading": "Continuous Evolution",
        "title": "Adaptable Conversational Excellence",
        "description": "With each conversation, Smart Bots learn and adapt, ensuring they're always in tune with user desires.",
        "bulletPoints": [
          "Immediate Feedback Processing",
          "Recommendations Powered by AI",
          "Effortless Content Syncing"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "Contact Sales",
            "link": "/contact"
          }
        ],
      },
      {
        "heading": "Global Resonance",
        "title": "Speak Every Language",
        "description": "Smart Bots effortlessly connect in multiple languages, ensuring your brand message resonates worldwide.",
        "bulletPoints": [
          "On-the-Fly Multilingual Translations",
          "Adapting to Cultural Nuances",
          "Engage Audiences Across the Globe"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "Contact Sales",
            "link": "/contact"
    }
  ],
},
],
"featureHeading": "Unwavering Digital Presence",
"featureTitle": "Be There for Every User Moment",
"featureAssurance": "Empress Smart Bots go beyond mere automation, ensuring meaningful brand-user interactions around the clock."
}
];
           

const features = [
  {
    "title": "Personalized User Experiences",
    "description": "Transform your audience's journey using AI to deliver personalized experiences and ensure your users feel uniquely understood.",
    "icon": "fluent:heart-24-regular",
  },
  {
    "title": "Proactive Feedback Insights",
    "description": "With the Smart Bots' feedback mechanisms, you can continually refine your offerings and stay aligned with your audience's evolving needs.",
    "icon": "fluent:person-feedback-24-regular",
  },
  {
    "title": "Always-On Assistance",
    "description": "With 24/7 Smart Bot assistance, ensure your audience always has a resourceful and immediate point of contact.",
    "icon": "fluent:clock-24-regular",
  },
  {
    "title": "Content Delivered Right",
    "description": "Maximize every interaction. Deliver content when it matters most, captivating your audience at the perfect moment.",
    "icon": "fluent:mail-edit-24-regular",
  },
  {
    "title": "Instant Content Integration",
    "description": "Sync your latest content effortlessly with Empress, ensuring your audience always engages with the freshest content.",
    "icon": "fluent:connector-24-regular",
  },
  {
    "title": "Smart Event Responses",
    "description": "With event-driven reactions, make every user action count, offering value-packed, context-rich interactions.",
    "icon": "fluent:calendar-24-regular",
  }
];


const faq = [
  {
    question: "How do Empress Smart Bots elevate the user experience?",
    answer: "Empress Smart Bots act as digital ambassadors, powered by AI to create highly personalized and genuine human-like interactions. They ensure your brand voice remains consistent, regardless of the platform, allowing you to form deep, meaningful connections with users globally. Integrated with Empress OS, they deliver content curated specifically for your audience, maximizing every engagement opportunity."
  },
  {
    question: "In what ways do Smart Bots evolve to better engage my users?",
    answer: "Our Smart Bots utilize cutting-edge AI to constantly analyze and adapt to user behaviors. With each interaction, they refine their approach, ensuring your audience always receives a bespoke experience. When paired with Experience-as-a-Service, these adaptations are data-driven, backed by real-time insights."
  },
  {
    question: "How to Smart Bots relate to other Empress offerings?",
    answer: "Smart Bots are integrated with Empress OS to ensure real-time content syncing. Every experience crafted in Empress OS is instantly available for delivery through the Smart Bots. Additionally, our Experience-as-a-Service watches over each interaction, offering actionable insights to refine and optimize user journeys."
  },
  {
    question: "Can Smart Bots assist my global audience in their native languages?",
    answer: "Absolutely! Smart Bots are built for global resonance. They support multilingual interactions, allowing your brand to connect seamlessly with diverse audiences. Paired with cultural sensitivity adaptations, they offer truly global engagement."
  },
  {
    question: "How consistent and reliable are Smart Bots in providing assistance?",
    answer: "Empress Smart Bots are engineered for round-the-clock operation, ensuring users receive instant, knowledgeable responses at any hour. Their resilience and adaptability make them a trusted resource, always available to assist and engage your users."
  },
  {
    question: "What ensures that Smart Bots deliver my content at the optimal time?",
    answer: "Leveraging AI, Smart Bots gauge user contexts and behaviors, ensuring that your content is presented at moments of maximum impact. By understanding user preferences and patterns, they ensure your content captivates the audience exactly when they're most receptive."
  },
  {
    question: "How do Smart Bots enrich user interactions during specific events?",
    answer: "Equipped with an event-driven mechanism, Smart Bots track and respond to user actions in real time. Be it a purchase, a query, or a feedback submission, they ensure every interaction is maximized for value, delivering contextually relevant content and responses."
  }
];


const featureBlocks = data[0].featureBlocks;

---

<Layout title="About" footerMargin={false}>
  <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div
            class="mt-6 flex flex-col sm:flex-row sm:justify-center lg:justify-start gap-3">
          <Link
              href={data[0].headingButtons[0].link}
              class="flex gap-1 items-center justify-center bg-brand"
              rel="noopener">
              {data[0].headingButtons[0].text}
          </Link>
          
          <Link
            size="lg"
            style="outline"
            rel="noopener"
            href={data[0].headingButtons[1].link}
            class="flex gap-1 items-center justify-center border-brand text-brand">
            {data[0].headingButtons[1].text}
          </Link>
          </div>
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={heroImage}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div>
  

  <Container>
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].sectionHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].offering.title}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].offering.subtext}
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
      <Card color="indigo" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgThree}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[0].heading}</span>
        <span slot="title">{data[0].valueBlocks[0].title}</span>
        <span slot="desc">{data[0].valueBlocks[0].description}</span>
      </Card>
      
      <Card color="purple" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgTwo}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[1].heading}</span>
        <span slot="title">{data[0].valueBlocks[1].title}</span>
        <span slot="desc">{data[0].valueBlocks[1].description}</span>
      </Card>
      
      <Card size="sm">
        <Fragment slot="image">
          <!-- // svg image. cannot use <picture/> as of now -->
          <Image
            src={IntegrationImg}
            alt="Feature image"
            width="909"
            height="823"
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[2].heading}</span>
        <span slot="title">{data[0].valueBlocks[2].title}</span>
        <span slot="desc">{data[0].valueBlocks[2].description}</span>
      </Card>
    </div>



      <!-- FeatureBlock.astro -->
    
      <div class="grid place-items-center">
        {data[0].featureBlocks.map((block) => (
          <div class="grid md:grid-cols-2 py-10">
            <div class="grid place-items-center pb-10 md:pb-0 md:order-2">
              <Picture
                src={FeatureImg1}
                alt="Feature Image"
                formats={["avif", "webp"]}
                loading="lazy"
              />
            </div>
            <div class="grid place-items-center">
              <div class="max-w-lg">
                <Badge color="purple" class="-ml-px">{block.heading}</Badge>
                <h3 class="text-2xl font-medium mt-4 [text-wrap:balance]">
                  {block.title}
                </h3>
                <p class="mt-4 text-slate-600 [text-wrap:balance]">
                  {block.description}
                </p>
                <ul class="grid mt-6 text-left gap-y-4">
                  {block.bulletPoints.map((point) => (
                    <li class="flex items-center gap-3 text-neutral-800">
                      <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                      <span class="text-sm">{point}</span>
                    </li>
                  ))}
                </ul>
                <div class="flex items-center gap-4 mt-6">
                  {block.buttons?.map((button, index) => {
                    if (index === 0) {
                      return (
                        <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                          <span>{button.text}</span>
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                            class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                            <path
                              fill-rule="evenodd"
                              d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                              clip-rule="evenodd"></path>
                          </svg>
                        </Link>
                      );
                    } else {
                      return (
                        <a 
                          href={button.link} 
                          class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                          {button.text}
                        </a>
                      );
                    }
                  })}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

