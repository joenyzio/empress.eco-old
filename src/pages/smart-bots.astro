---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "../components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../assets/hero-screenshot.png";
import IntegrationImg from "../assets/integrations.svg?url";
import FeatureImgOne from "../assets/features/2.png";
import FeatureImgTwo from "../assets/features/2.png";
import FeatureImgThree from "../assets/features/3.png";
import FeatureImg1 from "../assets/features/6.png";
import FeatureImg2 from "../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../assets/employee.jpg";


// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});


const data = [
  {
    "mainHeading": "Empress Smart Bots",
    "subtext": "Supercharge your platform with AI that learns and adapts. Craft unique, authentic connections every time.",
    "headingButtons": [
      {
        "text": "Explore Smart Bots",
        "link": "#"
      },
      {
        "text": "Get the Free Version",
        "link": "#"
      }
    ],
    "sectionHeading": "Transform User Engagement",
    "offering": {
      "title": "AI-Driven Engagement Hub",
      "subtext": "Craft superior experiences tailored to each user."
    },
    "valueBlocks": [
      {
        "heading": "Intelligent Support",
        "title": "Personalized Interactions",
        "description": "Smart Bots mold conversations to mirror your brand essence, offering a truly unique user journey."
      },
      {
        "heading": "Seamless Automation",
        "title": "Efficiency Meets Elegance",
        "description": "Incorporate Smart Bots to ensure your content is always accessible, driving meaningful interactions."
      },
      {
        "heading": "In-depth Insights",
        "title": "Drive User Engagement",
        "description": "Harness the power of AI to analyze and adapt to user behaviors in real-time, ensuring continual engagement."
      }
    ],
    "featureBlocks": [
      {
        "heading": "Unwavering Consistency",
        "title": "Unified Experience Across Ecosystems",
        "description": "Smart Bots ensure your brand voice is consistent, be it on web, mobile, or integrated third-party applications.",
        "bulletPoints": [
          "Turn Content into Converations",
          "Instantaneous User Behavior Tracking",
          "Personalized Content Recommendations"
        ],
        "buttons": [
          {
            "text": "Dive Deeper",
            "link": "#"
          }
        ],
      },
      {
        "heading": "Continuous Evolution",
        "title": "Adaptive Conversational Intelligence",
        "description": "Smart Bots aren't static; they evolve with every user interaction, growing smarter and more attuned to user preferences.",
        "bulletPoints": [
          "Maintain an Active Feedback Loop",
          "Data-Driven Improvement Suggestions",
          "Fluid Integration with Content Repositories"
        ],
        "buttons": [
          {
            "text": "Discover More",
            "link": "#"
          }
        ],
      },
      {
        "heading": "Global Reach",
        "title": "Bridge Language Gaps",
        "description": "Engage audiences worldwide. Smart Bots natively handle multiple languages, ensuring you resonate on a global scale.",
        "bulletPoints": [
          "Enter New Geographies with Ease",
          "On-the-Fly Translations",
          "User-Configurable Language Preferences"
        ]
      }
    ],
    "buttons": [
      {
        "text": "Be Part of the Future",
        "link": "#"
      }
    ],
    "featureHeading": "Around-the-Clock Support",
    "featureTitle": "Always Be There for Your Users",
    "featureAssurance": "Empress Smart Bots aren't just about automation. They embody the next step in interactive evolution, transforming how brands engage."
  }
];

const features = [
  {
    "title": "Tailored User Journeys",
    "description": "Using advanced AI, our Smart Bots evaluate user preferences and behavior, curating unique content paths.",
    "details": [
      "Real-time behavior analysis",
      "Adaptive content recommendations",
      "Seamless journey transitions"
    ],
    "icon": "fluent:document-javascript-24-regular",
  },
  {
    "title": "Insightful Feedback Mechanism",
    "description": "Smart Bots actively improve from feedback, enabling you to continually refine bot interactions and underlying content strategy.",
    "details": [
      "Active feedback solicitation",
      "Instantaneous processing",
      "Interactive feedback loops"
    ],
    "icon": "fluent:document-javascript-24-regular",
  },
  {
    "title": "Reliable 24/7 Bot Assistance",
    "description": "Smart Bots are designed to operate without downtime, ensuring that your users always have a knowledgeable, responsive guide.",
    "details": [
      "Zero downtime",
      "Broad spectrum query handling",
      "Instant response mechanism"
    ],
    "icon": "fluent:document-javascript-24-regular",
  },
  {
    "title": "Timely Content Propositions",
    "description": "Deliveri content precisely when it holds the most value to ensure maximum engagement and positions your content for optimal impact.",
    "details": [
      "Context-aware content delivery",
      "Peak engagement timing",
      "Adaptive content pacing"
    ],
    "icon": "fluent:document-javascript-24-regular",
  },
  {
    "title": "Seamless Content Syncing",
    "description": "Content published via Empress instantly syncs with your Smart Bot. Leverage integrations for richer data, enhancing your bot's performance.",
    "details": [
      "Out-of-the-box integration capabilities",
      "Performance optimization",
      "Compatibility with leading platforms"
    ],
    "icon": "fluent:trophy-24-regular",
  },
  {
    "title": "Event-Driven Reactions",
    "description": "Empress Smart Bots expertly respond to actions like purchases or queries, ensuring contextually rich, value-driven interactions.",
    "details": [
      "Real-time event tracking",
      "Contextual response formulation",
      "Adaptive interaction strategies"
    ],
    "icon": "fluent:box-24-regular",
  }
];


const faq = [
  {
    question: "What are Empress Smart Bots, and how can they help my platform?",
    answer: "Empress Smart Bots are AI-driven bots that learn, adapt, and craft authentic connections with users. They enhance user engagement by offering personalized interactions, intelligent support, and in-depth insights. With their help, you can ensure your brand voice is consistent across platforms and engage audiences worldwide."
  },
  {
    question: "How do Smart Bots adapt to user preferences?",
    answer: "Using advanced AI, our Smart Bots analyze user behaviors and preferences in real-time. They continually curate unique content paths, ensuring each interaction is tailored and relevant. Over time, they grow smarter and become more attuned to user preferences, offering a truly dynamic user journey."
  },
  {
    question: "Can I integrate Smart Bots with other platforms for richer data?",
    answer: "Absolutely! Empress Smart Bots offer seamless content syncing. Any content published through Empress instantly integrates with your Smart Bot. Plus, you can leverage out-of-the-box integration capabilities with leading platforms to funnel richer data into the system, further refining your bot's interactions."
  },
  {
    question: "Do Smart Bots support multiple languages?",
    answer: "Yes, they do. Our Smart Bots are designed for global reach. They natively handle multiple languages, allowing you to enter new geographies with ease and resonate with audiences on a global scale. Users can also configure their language preferences for more personalized interactions."
  },
  {
    question: "How reliable are the Smart Bots in assisting users?",
    answer: "Our Smart Bots are designed to operate 24/7 without downtime. They can handle a broad spectrum of queries, ensuring that users always receive knowledgeable, instant responses. With zero downtime and an instantaneous response mechanism, you can trust Smart Bots to be there for your users always."
  },
  {
    question: "How do Smart Bots ensure timely content delivery?",
    answer: "Smart Bots use AI to assess user context, delivering content precisely when it's most impactful. They offer context-aware content delivery, ensuring maximum engagement by presenting content at peak times and adapting the pacing based on user interactions."
  },
  {
    question: "How do Smart Bots respond to user events?",
    answer: "Empress Smart Bots have an event-driven reaction mechanism. They track events in real-time, formulating contextually rich responses. Whether it's a purchase, query, or any other user action, Smart Bots ensure that interactions are value-driven and relevant."
  }
];



const featureBlocks = data[0].featureBlocks;

---

<Layout title="About" footerMargin={false}>
  <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div
            class="mt-6 flex flex-col sm:flex-row sm:justify-center lg:justify-start gap-3">
          <Link
              href={data[0].headingButtons[0].link}
              target="_blank"
              class="flex gap-1 items-center justify-center bg-brand"
              rel="noopener">
              {data[0].headingButtons[0].text}
          </Link>
          
          <Link
            size="lg"
            style="outline"
            rel="noopener"
            href={data[0].headingButtons[1].link}
            class="flex gap-1 items-center justify-center border-brand text-brand"
            target="_blank">
            {data[0].headingButtons[1].text}
          </Link>
          </div>
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={heroImage}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div>
  

  <Container>
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].sectionHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].offering.title}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].offering.subtext}
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
      <Card color="indigo" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgThree}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[0].heading}</span>
        <span slot="title">{data[0].valueBlocks[0].title}</span>
        <span slot="desc">{data[0].valueBlocks[0].description}</span>
      </Card>
      
      <Card color="purple" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgTwo}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[1].heading}</span>
        <span slot="title">{data[0].valueBlocks[1].title}</span>
        <span slot="desc">{data[0].valueBlocks[1].description}</span>
      </Card>
      
      <Card size="sm">
        <Fragment slot="image">
          <!-- // svg image. cannot use <picture/> as of now -->
          <Image
            src={IntegrationImg}
            alt="Feature image"
            width="909"
            height="823"
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[2].heading}</span>
        <span slot="title">{data[0].valueBlocks[2].title}</span>
        <span slot="desc">{data[0].valueBlocks[2].description}</span>
      </Card>
    </div>



      <!-- FeatureBlock.astro -->
    
      <div class="grid place-items-center">
        {data[0].featureBlocks.map((block) => (
          <div class="grid md:grid-cols-2 py-10">
            <div class="grid place-items-center pb-10 md:pb-0 md:order-2">
              <Picture
                src={FeatureImg1}
                alt="Feature Image"
                formats={["avif", "webp"]}
                loading="lazy"
              />
            </div>
            <div class="grid place-items-center">
              <div class="max-w-lg">
                <Badge color="purple" class="-ml-px">{block.heading}</Badge>
                <h3 class="text-2xl font-medium mt-4 [text-wrap:balance]">
                  {block.title}
                </h3>
                <p class="mt-4 text-slate-600 [text-wrap:balance]">
                  {block.description}
                </p>
                <ul class="grid mt-6 text-left gap-y-4">
                  {block.bulletPoints.map((point) => (
                    <li class="flex items-center gap-3 text-neutral-800">
                      <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                      <span class="text-sm">{point}</span>
                    </li>
                  ))}
                </ul>
                <div class="flex items-center gap-4 mt-6">
                  {block.buttons?.map((button, index) => {
                    if (index === 0) {
                      return (
                        <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                          <span>{button.text}</span>
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                            class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                            <path
                              fill-rule="evenodd"
                              d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                              clip-rule="evenodd"></path>
                          </svg>
                        </Link>
                      );
                    } else {
                      return (
                        <a 
                          href={button.link} 
                          class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                          {button.text}
                        </a>
                      );
                    }
                  })}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

