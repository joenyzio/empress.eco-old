---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "../components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../assets/hero-screenshot.png";
import IntegrationImg from "../assets/integrations.svg?url";
import FeatureImgOne from "../assets/features/2.png";
import FeatureImgTwo from "../assets/features/2.png";
import FeatureImgThree from "../assets/features/3.png";
import FeatureImg1 from "../assets/features/6.png";
import FeatureImg2 from "../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../assets/employee.jpg";


// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});


const data = [
    {
        "mainHeading": "Advance Healthcare with Empress",
        "subtext": "Enhancing Patient Outcomes by Streamlining Clinical and Administrative Operations with Cutting-Edge Solutions.",
        "headingButtons": [
            {
                "text": "Get Started",
                "link": "https://app.empress.eco/admin/login"
            },
            {
                "text": "Contact Sales",
                "link": "/contact"
            }
        ],
        "sectionHeading": "Revolutionizing Healthcare Service Delivery",
        "offering": {
            "title": "Transforming Patient Experiences in Healthcare",
            "subtext": "From service ideation to patient feedback, streamline how you present and improve hospital services."
        },
        "valueBlocks": [
            {
                "heading": "Unified Service Information",
                "title": "All-In-One Service Suite",
                "description": "Showcase all hospital services in an integrated platform, ensuring potential clients easily understand what you offer."
            },
            {
                "heading": "Smart Bot for Queries",
                "title": "Instant Service Details",
                "description": "Offer real-time information about your services across multiple platforms using our Smart Bot."
            },
            {
                "heading": "Feedback-driven Improvements",
                "title": "xAPI Driven Feedback",
                "description": "Utilize the Experience API to gather feedback about services and make evidence-based improvements."
            }
        ],
        "featureBlocks": [
            {
                "heading": "Internal Operation Excellence",
                "title": "Streamlined Processes & Collaboration",
                "description": "Optimize internal hospital operations and foster enhanced team collaboration.",
                "bulletPoints": [
                    "Simplified internal communications.",
                    "Real-time task and project management.",
                    "Innovative solutions for operational challenges."
                ],
                "buttons": [
                    {
                      "text": "Get Started",
                      "link": "https://app.empress.eco/admin/login"
                    },
                    {
                        "text": "Contact Sales",
                        "link": "/contact"
                    }
                ]
            },
            {
                "heading": "Hospital Service Adaptability",
                "title": "Flexible Service Presentation",
                "description": "Adapt to changing healthcare trends by easily updating and customizing how you present hospital services.",
                "bulletPoints": [
                    "Easy updates to service information.",
                    "Consistent service presentation across touchpoints.",
                    "Adaptive solutions for evolving healthcare needs."
                ],
                "buttons": [
                    {
                      "text": "Get Started",
                      "link": "https://app.empress.eco/admin/login"
                    },
                    {
                        "text": "Contact Sales",
                        "link": "/contact"
                    }
                ]
            },
            {
                "heading": "Cutting-Edge Hospital Innovations",
                "title": "Pioneer Advanced Healthcare Solutions",
                "description": "Elevate your healthcare delivery by integrating state-of-the-art tools designed to refine both patient services and internal operations.",
                "bulletPoints": [
                    "Patient-centric service improvements driven by data.",
                    "Foster teamwork with real-time internal collaboration tools.",
                    "Harness innovative tools for enhanced operational efficiency."
                ],
                "buttons": [
                    {
                      "text": "Get Started",
                      "link": "https://app.empress.eco/admin/login"
                    },
                    {
                        "text": "Contact Sales",
                        "link": "/contact"
                    }
                ]
            }
        ],
        "featureHeading": "Service Extensions & Integrations",
        "featureTitle": "Seamless Integrations for Modern Healthcare",
        "featureAssurance": "Enhance service delivery and internal operations with our wide range of integrations, bolstered by Empress's top-notch features."
    }
];

const features = [
    {
        "title": "Hospital Service Ecosystem",
        "description": "Connect potential clients to comprehensive service details. Enhance service presentation and client engagement.",
        "icon": "fluent:document-javascript-24-regular"
    },
    {
        "title": "Empress Insights Dashboard",
        "description": "Gain insights into service inquiries, feedback, and internal operational metrics. Make informed improvements.",
        "icon": "fluent:document-javascript-24-regular"
    },
    {
        "title": "AI-Powered Service Suggestions",
        "description": "Recommend relevant hospital services to potential clients, ensuring their needs are met effectively.",
        "icon": "fluent:brain-circuit-24-regular"
    },
    {
        "title": "Consistent Service Information",
        "description": "Maintain uniformity in how you present services across platforms, building trust and clarity with your patients.",
        "icon": "fluent:document-javascript-24-regular"
    },
    {
        "title": "24/7 Service Information Hub",
        "description": "Provide uninterrupted service information to potential clients, ensuring they can always learn about what you offer.",
        "icon": "fluent:cloud-24-regular"
    },
    {
        "title": "Round-the-Clock Internal Access",
        "description": "Enable hospital teams to access internal tools and information anytime, ensuring smooth hospital operations.",
        "icon": "fluent:clock-24-regular"
    }
];


const faq = [
  {
    question: "How can Empress support healthcare workflows?",
    answer: "Empress streamlines various workflows, making it ideal for healthcare settings. By integrating your hospital services and internal operations into our platform, you can enhance patient feedback collection and implement data-driven improvements, optimizing both patient engagement and internal functions."
  },
  {
    question: "Can the Smart Bot handle patient queries across platforms?",
    answer: "Yes, our Smart Bot is versatile and can handle a wide range of queries. By incorporating healthcare-specific data and information, it becomes a valuable tool for addressing patient queries on various platforms in real-time."
  },
  {
    question: "How does the Experience data captured benefit healthcare institutions?",
    answer: "Our experience data offers real-time insights into interactions, which can be invaluable in a healthcare setting. By understanding patient interactions and feedback, institutions can refine services, enhance patient communication, and improve overall care quality."
  },
  {
    question: "Are there integrations suitable for healthcare settings?",
    answer: "While Empress offers a wide range of integrations, many can be seamlessly incorporated into healthcare settings. By connecting with platforms and tools commonly used in healthcare, Empress can further optimize operations and patient care."
  },
  {
    question: "How can AI-powered services be applied in a healthcare context?",
    answer: "The AI-powered suggestions can provide relevant service recommendations based on patient queries and needs. This ensures timely and accurate information delivery, enhancing patient experiences."
  },
  {
    question: "How does Empress ensure consistency for healthcare institutions?",
    answer: "Empress is built with cross-platform consistency in mind. When healthcare data is integrated, patients and staff will experience uniform service presentation across different touchpoints, ensuring clarity and trust in the information provided."
  },
  {
    question: "Is there support for healthcare teams transitioning to Empress?",
    answer: "Absolutely. We offer 24/7 access to our Service Information Hub. While Empress can be used across industries, we ensure that healthcare teams, in particular, receive the necessary support and resources to transition smoothly and make the most out of our platform."
  }
];




const featureBlocks = data[0].featureBlocks;

---

<Layout title="About" footerMargin={false}>
  <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div
            class="mt-6 flex flex-col sm:flex-row sm:justify-center lg:justify-start gap-3">
          <Link
              href={data[0].headingButtons[0].link}
              target="_blank"
              class="flex gap-1 items-center justify-center bg-brand"
              rel="noopener">
              {data[0].headingButtons[0].text}
          </Link>
          
          <Link
            size="lg"
            style="outline"
            rel="noopener"
            href={data[0].headingButtons[1].link}
            class="flex gap-1 items-center justify-center border-brand text-brand"
            target="_blank">
            {data[0].headingButtons[1].text}
          </Link>
          </div>
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={heroImage}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div>
  

  <Container>
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].sectionHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].offering.title}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].offering.subtext}
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
      <Card color="indigo" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgThree}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[0].heading}</span>
        <span slot="title">{data[0].valueBlocks[0].title}</span>
        <span slot="desc">{data[0].valueBlocks[0].description}</span>
      </Card>
      
      <Card color="purple" size="sm">
        <Fragment slot="image">
          <Picture
            src={FeatureImgTwo}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[1].heading}</span>
        <span slot="title">{data[0].valueBlocks[1].title}</span>
        <span slot="desc">{data[0].valueBlocks[1].description}</span>
      </Card>
      
      <Card size="sm">
        <Fragment slot="image">
          <!-- // svg image. cannot use <picture/> as of now -->
          <Image
            src={IntegrationImg}
            alt="Feature image"
            width="909"
            height="823"
            class="h-full w-full object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[2].heading}</span>
        <span slot="title">{data[0].valueBlocks[2].title}</span>
        <span slot="desc">{data[0].valueBlocks[2].description}</span>
      </Card>
    </div>



      <!-- FeatureBlock.astro -->
    
      <div class="grid place-items-center">
        {data[0].featureBlocks.map((block) => (
          <div class="grid md:grid-cols-2 py-10">
            <div class="grid place-items-center pb-10 md:pb-0 md:order-2">
              <Picture
                src={FeatureImg1}
                alt="Feature Image"
                formats={["avif", "webp"]}
                loading="lazy"
              />
            </div>
            <div class="grid place-items-center">
              <div class="max-w-lg">
                <Badge color="purple" class="-ml-px">{block.heading}</Badge>
                <h3 class="text-2xl font-medium mt-4 [text-wrap:balance]">
                  {block.title}
                </h3>
                <p class="mt-4 text-slate-600 [text-wrap:balance]">
                  {block.description}
                </p>
                <ul class="grid mt-6 text-left gap-y-4">
                  {block.bulletPoints.map((point) => (
                    <li class="flex items-center gap-3 text-neutral-800">
                      <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                      <span class="text-sm">{point}</span>
                    </li>
                  ))}
                </ul>
                <div class="flex items-center gap-4 mt-6">
                  {block.buttons?.map((button, index) => {
                    if (index === 0) {
                      return (
                        <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                          <span>{button.text}</span>
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                            class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                            <path
                              fill-rule="evenodd"
                              d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                              clip-rule="evenodd"></path>
                          </svg>
                        </Link>
                      );
                    } else {
                      return (
                        <a 
                          href={button.link} 
                          class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                          {button.text}
                        </a>
                      );
                    }
                  })}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

