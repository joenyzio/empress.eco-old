---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";
import react from '@astrojs/react';

import { Icon } from "astro-icon";
import ArrowIcon from "../components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../assets/hero-screenshot.png";
import IntegrationImg from "../assets/integrations.svg?url";
import FeatureImgOne from "../assets/features/2.png";
import FeatureImgTwo from "../assets/features/2.png";
import FeatureImgThree from "../assets/features/3.png";
import FeatureImg1 from "../assets/features/6.png";
import FeatureImg2 from "../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../assets/employee.jpg";
import SearchForIdeas from "../assets/features/search-for-new-ideas-technologies-technological-innovations.svg";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import AutomatedMarketing from "../assets/features/automated-marketing.svg";
import NetworkServerManagement from "../assets/features/network-server-endpoint-management.svg";
import DashboardDevelopment from "../assets/features/dashboard-development.png";
import ModernCity from "../assets/features/modern-city.svg";


// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});


const data = [
{
    "mainHeading": "Scale your Business with Empress",
    "subtext": "Empress equips your business with a modern suite of performance driven tools. Accelerate growth, streamline operations, and experience the next generation of excellence.",
    "headingButtons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ],
    "sectionHeading": "The Empress Advantage",
    "offering": {
      "title": "Elevate Every Touchpoint",
      "subtext": "Make each user interaction an opportunity for actionable insights, turning every engagement into a strategic step towards measurable business success."
    },
    "valueBlocks": [
        {
            "heading": "Elevate Collaboration",
            "title": "Empress OS",
            "description": "Comprehensive platform for collaborating, managing, and optimizing business growth."
        },
        {
            "heading": "Engage Globally",
            "title": "Empress Chat",
            "description": "AI-powered advocates that resonate brand consistency, delivering genuine, adaptable interactions."
        },
        {
            "heading": "Evolve Strategically",
            "title": "Empress Insights",
            "description": "Empower your strategies with insights captured in real-time, analyzed for actionable refinement."
        }
    ],
    "featureBlocks": [
    {
  "heading": "Empress OS",
  "title": "Centralize, Streamline, Collaborate on Your Projects",
  "description": "Empress OS redefines how teams work together, offering a single platform where information is effortless, collaboration is intuitive, and workflow efficiency is the norm.",
  "bulletPoints": [
      "Simplify management with intuitive tools",
      "Boost team productivity with collaborative features",
      "Streamline business processes for success"
  ],
  "buttons": [
    {
      "text": "Learn more",
      "link": "/os"
    },
    {
      "text": "View Pricing",
      "link": "/pricing"
    }
  ]
},
{
  "heading": "Empress Chat",
  "title": "Converse with AI-Precision, Connect with Human Touch",
  "description": "Introducing Empress Chat â€“ the intelligent bot designed to seamlessly integrate with Empress OS, enhancing both internal team collaboration and external customer engagement.",
  "bulletPoints": [
      "Enhance communication with smart AI interactions",
      "Efficiently connect workflows with Empress OS tools",
      "Improve support with 24/7 smart chat"
  ],
  "buttons": [
    {
      "text": "Learn more",
      "link": "/chat"
    },
    {
      "text": "View Pricing",
      "link": "/pricing"
    }
  ]
},
{
  "heading": "Empress Insights",
  "title": "Transform Your Data into Actionable Strategies",
  "description": "Harness the full spectrum of analytics with Empress Insights. Our robust dashboards bring the power of advanced data analysis to your fingertips, enabling smarter, faster business decisions.",
  "bulletPoints": [
    "Turn data into strategies with advanced analytics",
    "Use custom dashboards for focused decisions",
    "Gain market advantage with predictive insights"
  ],
  "buttons": [
    {
      "text": "Learn more",
      "link": "/insights"
    },
    {
      "text": "View Pricing",
      "link": "/pricing"
    }
  ]
},

    ],
    "buttons": [
        {
            "text": "Begin Your Digital Transformation",
            "link": "https://app.empress.eco/admin/login"
        },
        {
            "text": "Contact Our Team",
            "link": "/contact"
        }
    ],
    "featureHeading": "Empress Benefits",
    "featureTitle": "Connect Your Entire Ecoystem",
    "featureAssurance": "Unlock efficiency with seamless collaboration, enhanced communication, and actionable insightsâ€”all in one seamless ecosystem."
  }
];

const features = [
  {
    "title": "Unified Project Management",
    "description": "Empress OS centralizes your project landscape, enhancing visibility and control over every stage of your operations.",
    "icon": "fluent:briefcase-24-regular"
  },
  {
    "title": "Effortless Collaboration",
    "description": "Break down silos and connect your teams with tools designed for intuitive, real-time collaboration and communication.",
    "icon": "fluent:people-community-24-regular"
  },
  {
    "title": "Optimized Workflows",
    "description": "Automate and optimize your business processes with intelligent workflow designs that drive efficiency and success.",
    "icon": "fluent:data-trending-24-regular"
  },
  {
    "title": "AI-Enhanced Communication",
    "description": "Empress Chat utilizes AI precision to enhance every interaction, ensuring communication is as human as it is intelligent.",
    "icon": "fluent:chat-help-24-regular"
  },
  {
    "title": "Seamless Integration",
    "description": "Integrate with the robust suite of tools in Empress OS for a streamlined workflow, bolstered by the power of Empress Chat.",
    "icon": "fluent:plug-disconnected-24-regular"
  },
  {
    "title": "24/7 Intelligent Support",
    "description": "Provide round-the-clock support and enhance customer satisfaction with Empress Chat's responsive AI capabilities.",
    "icon": "fluent:clock-24-regular"
  },
  {
    "title": "Data-Driven Decision Making",
    "description": "Empower your business with actionable insights from Empress Insights to make decisions that drive growth and innovation.",
    "icon": "fluent:brain-circuit-24-regular"
  },
  {
    "title": "Customizable Analytics Dashboards",
    "description": "Craft the perfect overview of your business metrics with customizable dashboards, tailored to your strategic needs.",
    "icon": "fluent:cellular-data-cellular-unavailable-24-regular"
  },
  {
    "title": "Predictive Market Edge",
    "description": "Stay ahead of the curve by leveraging predictive insights from Empress Insights, giving you the edge in your market.",
    "icon": "fluent:weather-sunny-24-regular"
  }
];


const faq = [
  {
    question: "How does Empress OS enhance project management?",
    answer: "Empress OS centralizes your project management, providing a comprehensive platform that enhances visibility and control across all stages of your operations for greater efficiency."
  },
  {
    question: "Can Empress Chat be integrated with other tools?",
    answer: "Yes, Empress Chat is designed to integrate seamlessly with Empress OS's suite of tools, allowing for streamlined workflows and enhanced communication capabilities."
  },
  {
    question: "How does Empress support real-time collaboration?",
    answer: "Empress offers tools that facilitate intuitive, real-time collaboration and communication, breaking down silos and connecting teams effectively."
  },
  {
    question: "What kind of insights can Empress Insights provide?",
    answer: "Empress Insights offers advanced data analysis, transforming data into actionable strategies with custom dashboards and predictive insights for smarter, faster decision-making."
  },
  {
    question: "Is 24/7 customer support available with Empress Chat?",
    answer: "Absolutely, Empress Chat provides round-the-clock intelligent support, enhancing customer satisfaction with its responsive AI capabilities."
  },
  {
    question: "Can I customize the analytics dashboards to suit my business needs?",
    answer: "Yes, Empress Insights allows you to customize dashboards to display key metrics relevant to your business, aiding targeted decision-making."
  },
  {
    question: "How can Empress give my business a competitive edge?",
    answer: "By leveraging the predictive insights provided by Empress Insights, your business can anticipate market trends and customer needs, keeping you ahead of the competition."
  }
];



const featureBlocks = data[0].featureBlocks;

---

<Layout title="About" footerMargin={false}>
  <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div class="flex items-center gap-4 mt-6">
            <!-- First Button -->
            <a href={data[0].headingButtons[0].link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                <span>{data[0].headingButtons[0].text}</span>
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                    <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                </svg>
            </a>
        
            <!-- Second Button -->
            <a href={data[0].headingButtons[1].link} class="text-base px-6 py-3 transition bg-white text-slate-600 hover:text-slate-700 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-md shadow">
                {data[0].headingButtons[1].text}
            </a>
        </div>        
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={ModernCity}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div>
  

  <Container>
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].sectionHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].offering.title}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].offering.subtext}
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
      <Card color="indigo" size="sm">
        <Fragment slot="image">
          <Picture
            src={NetworkServerManagement}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[0].heading}</span>
        <span slot="title">{data[0].valueBlocks[0].title}</span>
        <span slot="desc">{data[0].valueBlocks[0].description}</span>
      </Card>
      
      <Card color="purple" size="sm">
        <Fragment slot="image">
          <Picture
            src={AutomatedMarketing}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[1].heading}</span>
        <span slot="title">{data[0].valueBlocks[1].title}</span>
        <span slot="desc">{data[0].valueBlocks[1].description}</span>
      </Card>
      
      <Card size="sm">
        <Fragment slot="image">
          <!-- // svg image. cannot use <picture/> as of now -->
          <Image
            src={DashboardDevelopment}
            alt="Feature image"
            width="909"
            height="823"
            class="object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[2].heading}</span>
        <span slot="title">{data[0].valueBlocks[2].title}</span>
        <span slot="desc">{data[0].valueBlocks[2].description}</span>
      </Card>
    </div>

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="text-base px-6 py-3 transition bg-white text-slate-600 hover:text-slate-700 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-md shadow">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>          
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../blockchain-technology.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="">
        <LottieAnimation id="lottie" src="../../auto-chat.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>

      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="text-base px-6 py-3 transition bg-white text-slate-600 hover:text-slate-700 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-md shadow">
                    {button.text}
                  </a>
                );
              }
            })}
          </div> 
        </div>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-10">
          {data[0].featureBlocks[0].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                  <span>{button.text}</span>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                    <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                  </svg>
                </a>
              );
            } else {
              return (
                <a href={button.link} class="text-base px-6 py-3 transition bg-white text-slate-600 hover:text-slate-700 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-md shadow">
                  {button.text}
                </a>
              );
            }
          })}
        </div> 
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../analytical-report.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

    <div class="mt-24 max-w-4xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

