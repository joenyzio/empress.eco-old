---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "@components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../../assets/hero-screenshot.png";
import IntegrationImg from "../../assets/integrations.svg?url";
import FeatureImgOne from "../../assets/features/2.png";
import FeatureImgTwo from "../../assets/features/2.png";
import FeatureImgThree from "../../assets/features/3.png";
import FeatureImg1 from "../../assets/features/6.png";
import FeatureImg2 from "../../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../../assets/employee.jpg";
import Logo from "../../../assets/logo-full.png";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import Education from "../../assets/features/education.svg";
import AutomatedMarketing from "../../assets/features/automated-marketing.svg";
import NetworkServerManagement from "../../assets/features/network-server-endpoint-management.svg";
import DashboardDevelopment from "../../assets/features/dashboard-development.png";

const { nomargin } = Astro.props;

// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

const Finances = [
{
    "title": "Account",
    "description": "Manage Financial Flow",
    "icon": "ph:money-duotone",
    "link": "/app/finances/account",
    "color": "indigo"
  },
  {
    "title": "Invoice",
    "description": "Simplify Invoice Management",
    "icon": "ph:calendar-check-duotone",
    "link": "/app/finances/expense",
    "color": "indigo"
  },
  {
    "title": "Expense",
    "description": "Track Company Spending",
    "icon": "ph:calculator-duotone",
    "link": "/app/finances/invoice",
    "color": "indigo"
  },
  {
    "title": "Tax",
    "description": "Ensure Tax Compliance",
    "icon": "ph:coins-duotone",
    "link": "/app/finances/payroll",
    "color": "indigo"
  },
  {
    "title": "Budget",
    "description": "Optimize Resource Allocation",
    "icon": "ph:battery-charging-duotone",
    "link": "/app/finances/budget",
    "color": "indigo"
  },
  {
    "title": "Contracts",
    "description": "Process Contracts Efficiently",
    "icon": "ph:newspaper-duotone",
    "link": "/app/finances/tax",
    "color": "indigo"
  }
];


const data = [
{
    "mainHeading": "Simplify Your Finances",
    "subtext": "Streamline finance management, enhance compliance, and drive smarter decisions.",
    "headingButtons": [
        {
            "text": "Get Started",
            "link": "/contact"
        },
        {
            "text": "View pricing",
            "link": "/pricing"
        }
    ],
    "sectionHeading": "Financial Services Reimagined",
    "offering": {
        "title": "AI-Powered Financial Solutions",
        "subtext": "Craft personalized financial journeys leveraging real-time data, analytics, and seamless integrations."
    },
    "valueBlocks": [
    {
        "heading": "Empress OS",
        "title": "Simplify Coordination",
        "description": "Centralize financial data, ensure regulatory compliance, and elevate operational workflows."
    },
    {
        "heading": "Empress Chat",
        "title": "Build Client Relationships",
        "description": "Ensure rapid responses and optimize both internal and client-facing with compliance, tailored to drive financial outcomes."
    },
    {
        "heading": "Empress Insights",
        "title": "Boost Financial Outcomes",
        "description": "Access real-time actionable analytics to understand client behaviors to optimize performance."
    }
],
    "featureBlocks": [
    {
  "heading": "OS for Financial",
  "title": "Transform Financial Operations & Collaboration",
  "description": "Leverage Empress OS to redefine how financial services handle information, drive team synergy, and optimize intricate workflows for unmatched efficiency and compliance.",
  "bulletPoints": [
"Consolidate financial data for quick, secure retrieval",
"Collaborate easily while complying with regulations",
"Simplify financial tasks for better service"
  ],
  "buttons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "View Pricing",
      "link": "/pricing"
    }
  ]
},
{
  "heading": "Chat for Finance",
  "title": "Revolutionize Financial Communication",
  "description": "Empress Chat seamlessly integrates with Empress OS, enabling efficient communication that caters to the unique demands of the financial sector, from internal collaboration to client engagement.",
  "bulletPoints": [
  "Provide immediate, personalized financial responses",
"Maintain secure, compliant data communication",
"Enhance client relations with engagement and insights"
  ],
  "buttons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "View Pricing",
      "link": "/pricing"
    }
  ]
},
{
  "heading": "Insights for Finance",
  "title": "Data-Driven Financial Performance",
  "description": "Equip your financial firm with the advanced analytics and intuitive dashboards crucial for agile decision-making in a dynamic financial landscape.",
  "bulletPoints": [
  "Simplify financial analysis for strategic action",
"Gain immediate client insights for proactive service",
"Refine strategies with advanced performance metrics"
  ],
  "buttons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "View Pricing",
      "link": "/pricing"
    }
  ]
},
    ],
    "getStartedSection": {
      "badge": "Additional Features",
      "title": "Optimize Finances with Empress",
      "description": "Manage your finances effectively with the essential tools for financial control."
    },
    "featureHeading": "Empress for Finances",
    "featureTitle": "We're Here to Support You",
    "featureAssurance": "A suite crafted meticulously for the evolving financial landscape.",
  }
];

const features = [
{
    "title": "Inights",
    "description": "Financial Data Insights",
    "icon": "ph:chart-bar-duotone",
    "link": "/feature/insights",
    "color": "indigo"
  },
  {
    "title": "Flows",
    "description": "Efficient Finance Management",
    "icon": "ph:flow-arrow-duotone",
    "link": "/feature/flows",
    "color": "indigo"
  },
  {
    "title": "Zaps",
    "description": "Simplify Financial Tasks",
    "icon": "ph:lightning-duotone",
    "link": "/feature/zaps",
    "color": "indigo"
  },
  {
    "title": "Assistants",
    "description": "On-Demand Financial Support",
    "icon": "ph:robot-duotone",
    "link": "/feature/assistants",
    "color": "indigo"
  },
  {
    "title": "Forecast",
    "description": "Financial Trend Prediction",
    "icon": "ph:cloud-sun-duotone",
    "link": "/feature/forecast",
    "color": "indigo"
  },
  {
    "title": "Bridge",
    "description": "Team Financial Planning",
    "icon": "ph:arrows-out-duotone",
    "link": "/feature/bridge",
    "color": "indigo"
  },
  {
    "title": "Administration",
    "description": "Secure Financial Access",
    "icon": "ph:address-book-duotone",
    "link": "/feature/administration",
    "color": "indigo"
  },
  {
    "title": "Innovation",
    "description": "Customize Financial Experiences",
    "icon": "ph:circles-three-plus-duotone",
    "link": "/feature/innovation",
    "color": "indigo"
  },
  {
    "title": "Integrations",
    "description": "Merge Financial Systems",
    "icon": "ph:plugs-connected-duotone",
    "link": "/feature/integrations",
    "color": "indigo"
  },
];



const faq = [
  {
    question: "How does Empress OS centralize financial information?",
    answer: "Empress OS creates a centralized hub for all your financial data, ensuring easy and secure access while maintaining regulatory compliance and elevating operational workflows."
  },
  {
    question: "What client relationship tools does Empress offer for financial services?",
    answer: "Empress Chat delivers rapid, compliant, and personalized communication options tailored to financial services, optimizing client engagement and satisfaction."
  },
  {
    question: "Can Empress Insights enhance my firm's financial performance?",
    answer: "Yes, Empress Insights provides real-time analytics and dashboards to dissect client behaviors and engagement patterns, enabling data-driven strategies that boost financial outcomes."
  },
  {
    question: "How does Empress ensure compliance in financial operations?",
    answer: "Empress prioritizes compliance by streamlining operations through secure platforms and communication channels that adhere to regulatory standards."
  },
  {
    question: "What makes Empress a suitable choice for collaboration?",
    answer: "Empress fosters seamless collaboration within financial services by integrating a secure and compliant environment that promotes teamwork and enhances service delivery."
  },
  {
    question: "How does Empress integrate with existing financial software?",
    answer: "Empress seamlessly integrates with existing financial platforms, simplifying tracking and decision-making while ensuring data integrity and security."
  },
  {
    question: "What advantages does Empress offer for designing customer journeys?",
    answer: "Empress provides design tools to create intuitive financial journeys for clients, ensuring meaningful interactions from portals to chat histories."
  }
];


const featureBlocks = data[0].featureBlocks;

---


<Layout title="Build" footerMargin={false}>
  <div class="overflow-x-clip mt-20">
  </Sectionhead>

  <Container>
    <div>
      <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center ">
        <Badge color="purple">{data[0].featureHeading}</Badge>
        <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
          {data[0].mainHeading}
        </h2>
        <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
          {data[0].subtext}
        </p>
      </div>
      <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-6 md:gap-16">
        {
          Finances.map((item) => (
            <a href={item.link} 
               class={`focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-${item.color}-500 transition-transform hover:scale-105`}>
              <div class="flex items-center group hover:bg-slate-50 rounded-xl transition-all md:-m-5 p-5 border border-gray-200 shadow-sm">
                <div class={`bg-${item.color}-100 rounded-lg grid place-items-center p-2 w-12 h-12 shrink-0 mr-6`}>
                  {/* Use the original icon coloring method */}
                  <Icon class={`text-${item.color}-500`} name={item.icon} size="28" />
                </div>
                <div class="flex flex-col justify-center text-left" style="color: #1e293b;">
                  <h3 class="font-semibold text-md">{item.title}</h3>
                  <p class="text-slate-500">{item.description}</p>
                </div>
              </div>
            </a>
          ))
        }
      </div> 
      
    </div>

  </Container>

  <Container>

  

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>          
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../../../job-announcement.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="">
        <LottieAnimation id="lottie" src="../../../../global-market-2.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>

      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                    {button.text}
                  </a>
                );
              }
            })}
          </div> 
        </div>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-10">
          {data[0].featureBlocks[0].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                  <span>{button.text}</span>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                    <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                  </svg>
                </a>
              );
            } else {
              return (
                <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                  {button.text}
                </a>
              );
            }
          })}
        </div> 
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../../../data-analysis-2.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

  </Container>

  <Container>

    <div
    class:list={[
      "max-w-4xl mx-auto flex flex-col items-center justify-center",
      !nomargin && "mt-24",
    ]}>
    <Badge color="purple">{data[0].getStartedSection.badge}</Badge>
    <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
      {data[0].getStartedSection.title}
    </h2>
    <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
      {data[0].getStartedSection.description}
    </p>
  </div>

  <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-6 md:gap-16">
    {
      features.map((item) => (
        <a href={item.link} 
           class={`focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-${item.color}-500 transition-transform hover:scale-105`}>
          <div class="flex items-center group hover:bg-slate-50 rounded-xl transition-all md:-m-5 p-5 border border-gray-200 shadow-sm">
            <div class={`bg-${item.color}-100 rounded-lg grid place-items-center p-2 w-12 h-12 shrink-0 mr-6`}>
              {/* Use the original icon coloring method */}
              <Icon class={`text-${item.color}-500`} name={item.icon} size="28" />
            </div>
            <div class="flex flex-col justify-center text-left" style="color: #1e293b;">
              <h3 class="font-semibold text-md">{item.title}</h3>
              <p class="text-slate-500">{item.description}</p>
            </div>
          </div>
        </a>
      ))
    }
  </div> 


  <div class="flex justify-center items-center mt-20"> 
    <a href="/features" class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150 w-full max-w-xs" style="box-shadow: 0 4px 6px rgba(90, 49, 196, 0.25);"> <!-- Added classes and inline styles to match the look -->
      <span>Explore All Features</span>
      <svg
        xmlns="http://www.w3.org/2000/svg" 
        viewBox="0 0 20 20"
        fill="currentColor"
        class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
        <path
          fill-rule="evenodd"
          d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
          clip-rule="evenodd"></path>
      </svg>
    </a>
  </div>

</Container>


  
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

