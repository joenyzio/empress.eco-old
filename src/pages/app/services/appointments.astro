---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "@components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../../../assets/hero-screenshot.png";
import IntegrationImg from "../../../assets/integrations.svg?url";
import FeatureImgOne from "../../../assets/features/2.png";
import FeatureImgTwo from "../../../assets/features/2.png";
import FeatureImgThree from "../../../assets/features/3.png";
import FeatureImg1 from "../../../assets/features/6.png";
import FeatureImg2 from "../../../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../../../assets/employee.jpg";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import ECommerce from "../../../assets/features/buyer-standing-in-front-of-giant-smartphone-and-buying-goods-on-internet-store.svg";
import AutomatedMarketing from "../../../assets/features/automated-marketing.svg";
import NetworkServerManagement from "../../../assets/features/network-server-endpoint-management.svg";
import DashboardDevelopment from "../../../assets/features/dashboard-development.png";


// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});


const data = [
{
    "mainHeading": "Appointments: Schedule Client Meetings",
    "subtext": "Streamline your scheduling process with advanced appointment-setting capabilities designed to enhance client engagement and optimize time management.",
    "headingButtons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ],
    "sectionHeading": "Scheduling Simplified",
    "offering": {
      "title": "Elevate Client Meetings with Seamless Scheduling",
      "subtext": "Empower your business with tools that offer a personalized appointment setting experience, maximizing client engagement and operational excellence."
    },
    "valueBlocks": [
  {
    "heading": "Dynamic Scheduling",
    "title": "Automate Appointment Setting",
    "description": "Utilize a dynamic scheduling system that adapts to client preferences, manages real-time availabilities, and reduces no-shows through automated reminders."
  },
  {
    "heading": "Integrated Calendar",
    "title": "Centralize Your Schedule",
    "description": "Keep track of all client appointments, events, and follow-ups in one integrated calendar, accessible across devices for your convenience."
  },
  {
    "heading": "Customizable Booking",
    "title": "Personalize Your Clientâ€™s Experience",
    "description": "Offer clients a tailored booking experience with customizable appointment types, durations, and special instructions to meet their unique needs."
  }
],

    "featureBlocks": [
    {
  "heading": "Appointment Interface",
  "title": "Intuitive Booking for Clients",
  "description": "Present clients with an intuitive interface for booking appointments, allowing them to easily select services, times, and staff members that best fit their needs.",
  "bulletPoints": [
"User-friendly client-facing appointment system",
"Customize service offerings for easy selection",
"Allow clients to choose staff based on expertise and availability"
  ],
  "buttons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "View Pricing",
      "link": "/pricing"
    }
  ]
},

{
  "heading": "Scheduling Analytics",
  "title": "Optimize Your Availability with Data",
  "description": "Analyze your appointment trends to understand peak times, client preferences, and resource allocation for an optimized schedule that meets demand.",
  "bulletPoints": [
  "Track and analyze booking patterns",
"Adjust availability and staffing in response to analytics insights",
"Plan promotions and staffing based on forecasted demand"
  ],
  "buttons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "View Pricing",
      "link": "/pricing"
    }
  ]
},
{
  "heading": "Multi-Channel Scheduling",
  "title": "Book Appointments Across Various Platforms",
  "description": "Allow clients to book appointments through multiple channels including online, phone, and in-person for a seamless and accessible scheduling experience.",
  "bulletPoints": [
  "Enable online booking via website and social media",
"Integrate with phone systems for call-in appointments",
"Support in-person scheduling with on-the-spot availability checks"
  ],
  "buttons": [
    {
      "text": "Get Started",
      "link": "/contact"
    },
    {
      "text": "View Pricing",
      "link": "/pricing"
    }
  ]
},  
    ],
    "featureHeading": "Appointment Setting Features",
    "featureTitle": "Enhance Your Scheduling Process",
    "featureAssurance": "Our suite of scheduling tools is dedicated to improving your appointment management, ensuring you deliver a personalized and efficient service."
  }
];

const features = [
  {
    "title": "Mobile Scheduling",
    "description": "Book and manage appointments on-the-go with our fully responsive mobile scheduling interface, ensuring youâ€™re always connected to your clients.",
    "icon": "fluent:phone-mobile-24-regular",
  },
  {
    "title": "Automated Confirmations",
    "description": "Reduce no-shows with automated appointment confirmations and reminders sent to clients via email or SMS.",
    "icon": "fluent:bot-24-regular",
  },
  {
    "title": "Time Zone Intelligence",
    "description": "Automatically detect and adjust for client time zones to avoid any confusion, making scheduling seamless for international appointments.",
    "icon": "fluent:earth-24-regular",
  },
  {
    "title": "Client Management",
    "description": "Keep detailed client profiles that store history, preferences, and future appointments to provide personalized service and enhance client relations.",
    "icon": "fluent:people-search-24-regular",
  },
  {
    "title": "Service Customization",
    "description": "Tailor your services with add-ons, price variations, and special requests within the booking process to meet diverse client needs.",
    "icon": "fluent:design-ideas-24-regular",
  },
  {
    "title": "Payment Integration",
    "description": "Facilitate smooth transactions by integrating payment processing with the scheduling system, allowing clients to pay for services when they book.",
    "icon": "fluent:payment-24-regular",
  }
];

const faq = [
  {
    question: "How does the automated appointment setting work?",
    answer: "Our automated appointment setting system allows you to set your availability preferences, which clients can view in real-time. Once a client selects a time slot, they receive an automatic confirmation and reminder via email or SMS to reduce the chance of no-shows."
  },
  {
    question: "Can I manage appointments from my mobile device?",
    answer: "Absolutely! Our mobile scheduling interface is fully responsive, allowing you to book, manage, and reschedule appointments directly from your smartphone or tablet, ensuring you can stay connected with your clients anywhere, anytime."
  },
  {
    question: "How does the system handle different time zones for international appointments?",
    answer: "Our time zone intelligence feature automatically detects and adjusts for the client's time zone, ensuring that the appointment times you see are synchronized with your clientsâ€™ locations to prevent any scheduling confusion."
  },
  {
    question: "Is it possible to customize services and add special instructions for appointments?",
    answer: "Yes, you can personalize the booking experience by customizing the appointment types, durations, and adding special instructions or requests. This ensures that each client receives service tailored to their unique needs."
  },
  {
    question: "What kind of data can I get from scheduling analytics?",
    answer: "Scheduling analytics provide insights into booking patterns, client preferences, and resource allocation. This data helps you understand peak times, optimize your schedule, and plan your staffing and promotional activities accordingly."
  },
  {
    question: "How does the integrated calendar improve my scheduling process?",
    answer: "The integrated calendar centralizes all your appointments, events, and follow-ups, allowing you to manage your schedule across devices efficiently. This helps ensure that you and your team are always up-to-date with upcoming commitments."
  },
  {
    question: "What payment methods are supported through the payment integration feature?",
    answer: "Our payment integration feature supports a variety of payment methods, including credit cards, debit cards, and online payment platforms. This allows your clients to choose the most convenient way to pay when they book an appointment."
  },
  {
    question: "How does multi-channel scheduling work and which platforms are supported?",
    answer: "Our multi-channel scheduling enables clients to book appointments through various platforms such as your website, social media, phone, or in-person visits. The system ensures a seamless booking experience by integrating with each platform and providing real-time availability."
  }
];





const featureBlocks = data[0].featureBlocks;

---

<Layout title="About" footerMargin={false}>
  <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div
            class="mt-6 flex flex-col sm:flex-row sm:justify-center lg:justify-start gap-3">
          <Link
              href={data[0].headingButtons[0].link}
              class="flex gap-1 items-center justify-center bg-brand"
              rel="noopener">
              {data[0].headingButtons[0].text}
          </Link>
          
          <Link
            size="lg"
            style="outline"
            rel="noopener"
            href={data[0].headingButtons[1].link}
            class="flex gap-1 items-center justify-center border-brand text-brand">
            {data[0].headingButtons[1].text}
          </Link>
          </div>
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={ECommerce}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div>
  

  <Container>
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].sectionHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].offering.title}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].offering.subtext}
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
      <Card color="indigo" size="sm">
        <Fragment slot="image">
          <Picture
            src={NetworkServerManagement}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[0].heading}</span>
        <span slot="title">{data[0].valueBlocks[0].title}</span>
        <span slot="desc">{data[0].valueBlocks[0].description}</span>
      </Card>
      
      <Card color="purple" size="sm">
        <Fragment slot="image">
          <Picture
            src={AutomatedMarketing}
            alt="Feature image"
            formats={["avif", "webp"]}
            class="object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[1].heading}</span>
        <span slot="title">{data[0].valueBlocks[1].title}</span>
        <span slot="desc">{data[0].valueBlocks[1].description}</span>
      </Card>
      
      <Card size="sm">
        <Fragment slot="image">
          <!-- // svg image. cannot use <picture/> as of now -->
          <Image
            src={DashboardDevelopment}
            alt="Feature image"
            width="909"
            height="823"
            class="object-contain"
            loading="lazy"
          />
        </Fragment>
        <span slot="badge">{data[0].valueBlocks[2].heading}</span>
        <span slot="title">{data[0].valueBlocks[2].title}</span>
        <span slot="desc">{data[0].valueBlocks[2].description}</span>
      </Card>
    </div>

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../../../../../business-technology.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="">
        <LottieAnimation id="lottie" src="../../../../../../auto-chat.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>

      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[1].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-6">
          {data[0].featureBlocks[2].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                  <span>{button.text}</span>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                    <path
                      fill-rule="evenodd"
                      d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                      clip-rule="evenodd"></path>
                  </svg>
                </Link>
              );
            } else {
              return (
                <a 
                  href={button.link} 
                  class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                  {button.text}
                </a>
              );
            }
          })}
        </div>
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../../../../../pie-chart-bar.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

