---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "@components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../../assets/hero-screenshot.png";
import directus from "../../assets/directus.png";
import IntegrationImg from "../../assets/integrations.svg?url";
import FeatureImgOne from "../../assets/features/2.png";
import FeatureImgTwo from "../../assets/features/2.png";
import FeatureImgThree from "../../assets/features/3.png";
import FeatureImg1 from "../../assets/features/6.png";
import FeatureImg2 from "../../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../../assets/employee.jpg";
import TargetMarketing from "../../assets/features/targeting-audience-for-marketing.svg";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import AutomatedMarketing from "../../assets/features/automated-marketing.svg";
import NetworkServerManagement from "../../assets/features/network-server-endpoint-management.svg";
import DashboardDevelopment from "../../assets/features/dashboard-development.png";

const { nomargin } = Astro.props;

// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

const data = [
  {
    "mainHeading": "Supercharge Your Sales",
    "subtext": "Boost sales effortlessly with our AI-driven tools, designed to skyrocket conversions.",
    "headingButtons": [
      {
        "text": "Get Started",
        "link": "/contact"
      },
      {
        "text": "View Pricing",
        "link": "/pricing"
      }
    ],
    "featureBlocks": [
      {
        "heading": "CRM That Grows Revenue",
        "title": "Customer Data, Optimized",
        "description": "Our CRM doesn't just store dataâ€”it turns it into sales opportunities with actionable insights and predictive analytics.",
        "bulletPoints": [
          "Real-time lifecycle tracking increases retention rates",
          "Proactive lead management boosts conversion",
          "Forecasting tools that predict revenue trends"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ]
      },
      {
        "heading": "Analytics That Inform Strategy",
        "title": "Strategic Insights, Better Decisions",
        "description": "Harness the power of your data with customizable analytics that deliver strategic insights and clear action items.",
        "bulletPoints": [
          "On-demand insights for instant decision-making",
          "Tailored reporting that aligns with sales targets",
          "In-depth market analysis for competitive advantage"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ]
      },
      {
        "heading": "Automation That Scales",
        "title": "Efficiency at Scale",
        "description": "Empower your team with sales automation that scales with your business, ensuring a consistent and personalized customer journey.",
        "bulletPoints": [
          "Reduce manual entry with task automation",
          "Workflow customization that adapts to your sales strategy",
          "Smart scheduling that increases lead engagement"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ]
      }
    ],
    "getStartedSection": {
      "badge": "Get Started Today",
      "title": "Start Selling with Empress",
      "description": "Step into the future of sales with a suite designed to deliver results."
    },
    "featureHeading": "Sell with Empress",
    "featureTitle": "Level Up Your Sales",
    "featureAssurance": "Guaranteed satisfaction with 24/7 support â€” we're always here for your sales needs."
  }
];


const features = [
  {
    "title": "Streamline",
    "description": "Enhance sales efficiency",
    "icon": "fluent:flash-24-regular",
    "link": "/features/streamline"
  },
  {
    "title": "Analyze",
    "description": "Understand customer trends",
    "icon": "fluent:cellular-data-1-24-regular",
    "link": "/features/analyze"
  },
  {
    "title": "Automate",
    "description": "Automate sales processes",
    "icon": "fluent:bot-24-regular",
    "link": "/features/automate"
  },
  {
    "title": "Permission",
    "description": "Manage sales access",
    "icon": "fluent:lock-24-regular",
    "link": "/features/permission"
  },
  {
    "title": "Chat",
    "description": "Engage with prospects",
    "icon": "fluent:chat-multiple-24-regular",
    "link": "/features/chat"
  },
  {
    "title": "Forecast",
    "description": "Anticipate sales trends",
    "icon": "fluent:weather-sunny-low-24-regular",
    "link": "/features/forecast"
  },
  {
    "title": "Collaborate",
    "description": "Coordinate sales teams",
    "icon": "fluent:people-team-24-regular",
    "link": "/features/collaborate"
  },
  {
    "title": "Integrate",
    "description": "Sync sales tools",
    "icon": "fluent:plug-connected-24-regular",
    "link": "/features/integrate"
  }
];





const apps = [
  {
    "title": "CRM",
    "description": "Customer relationship management",
    "icon": "fluent:people-add-24-regular",
    "link": "/plugins/crm",
    "button": "Start Selling"
  },
  {
    "title": "Quote",
    "description": "Generate customer quotes",
    "icon": "fluent:money-24-regular",
    "link": "/app/sell/quote",
    "button": "Start Selling"
  },
  {
    "title": "Email",
    "description": "Targeted email campaigns ",
    "icon": "fluent:mail-copy-24-regular",
    "link": "/app/sell/email",
    "button": "Start Selling"
  },
  {
    "title": "Point of Sale",
    "description": "Retail transaction processing",
    "icon": "fluent:payment-24-regular",
    "link": "/app/sell/pos",
    "button": "Start Selling"
  },
  {
    "title": "Subscription",
    "description": "Manage recurring payments",
    "icon": "fluent:add-circle-24-regular",
    "link": "/app/sell/subscription",
    "button": "Start Selling"
  },
  {
    "title": "Rental",
    "description": "Equipment leasing solutions",
    "icon": "fluent:box-arrow-left-24-regular",
    "link": "/app/sell/rental",
    "button": "Start Selling"
  }
];

const faq = [
  {
    "question": "What sets Empress Sales Suite apart in sales performance?",
    "answer": "Empress Sales Suite is AI-driven, offering tailored solutions that enhance sales efficiency, automate processes, and provide actionable insights to skyrocket conversion rates and shorten sales cycles."
  },
  {
    "question": "Can Empress integrate with my existing sales and marketing tools?",
    "answer": "Absolutely. Empress is designed for intuitive integration, connecting seamlessly with your current CRM, email, and campaign management tools to create a synergistic sales process."
  },
  {
    "question": "How does the Empress CRM help in growing revenue?",
    "answer": "Empress CRM goes beyond data storage, transforming customer information into sales opportunities with features like real-time lifecycle tracking and predictive analytics for improved lead management and forecasting."
  },
  {
    "question": "What type of support does Empress provide?",
    "answer": "We offer a satisfaction guarantee backed by 24/7 support to ensure that your sales operations are uninterrupted and consistently supported for optimal performance."
  },
  {
    "question": "How does Empress automate the sales process?",
    "answer": "Empress automates your sales process by reducing manual data entry, customizing workflows to your strategy, and smart scheduling to enhance lead engagement and follow-ups."
  },
  {
    "question": "Can Empress manage transactions and subscriptions?",
    "answer": "Yes, Empress includes robust features for retail point of sale transaction processing and subscription management, streamlining payments and recurring revenue models."
  },
  {
    "question": "What resources are available to get started with Empress?",
    "answer": "We provide comprehensive onboarding resources, including detailed documentation, training modules, and customer support to help you start selling with Empress effortlessly."
  }
];




const featureBlocks = data[0].featureBlocks;

---

<Layout title="Build" footerMargin={false}>
  <div class="overflow-x-clip mt-20">
  </Sectionhead>

  <Container>
    <div>
      <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center ">
        <Badge color="purple">{data[0].featureHeading}</Badge>
        <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
          {data[0].mainHeading}
        </h2>
        <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
          {data[0].subtext}
        </p>
      </div>
      <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-10">
        {
          apps.map((item) => (
            <div class="flex flex-col items-center group hover:bg-slate-50 hover:shadow-lg rounded-lg transition-all p-6 text-center shadow-lg bg-white">
              <div class="bg-indigo-50 border shadow-sm border-indigo-100 transition-colors rounded-lg grid place-items-center p-4 mb-5 w-16 h-16 shrink-0">
                <Icon class="text-indigo-500" name={item.icon} size="32" />
              </div>
              <h3 class="font-semibold text-lg text-gray-900">{item.title}</h3>
              <p class="text-slate-500 mt-2 text-base leading-relaxed">{item.description}</p>
              <a href={item.link} class="mt-6 inline-block w-3/4 px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150" style="box-shadow: 0 4px 6px rgba(90, 49, 196, 0.25);">
                {item.button}
              </a>
            </div>
          ))
        }
      </div>
      
    </div>

  </Container>

  <Container>

  

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>          
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../../../job-announcement.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="">
        <LottieAnimation id="lottie" src="../../../../global-market-2.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>

      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                    {button.text}
                  </a>
                );
              }
            })}
          </div> 
        </div>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-10">
          {data[0].featureBlocks[0].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                  <span>{button.text}</span>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                    <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                  </svg>
                </a>
              );
            } else {
              return (
                <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                  {button.text}
                </a>
              );
            }
          })}
        </div> 
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../../../data-analysis-2.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

  </Container>

  <Container>

    <div
    class:list={[
      "max-w-4xl mx-auto flex flex-col items-center justify-center",
      !nomargin && "mt-24",
    ]}>
    <Badge color="purple">{data[0].getStartedSection.badge}</Badge>
    <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
      {data[0].getStartedSection.title}
    </h2>
    <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
      {data[0].getStartedSection.description}
    </p>
  </div>

  <div class="grid sm:grid-cols-2 md:grid-cols-4 mt-16 gap-8 md:gap-10">
    {
      features.map((item) => (
        <a href={item.link} class="focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          <div class="flex flex-col items-center group hover:bg-slate-50 hover:shadow-lg rounded-lg transition-all p-6 text-center shadow-lg bg-white">
            <div class="bg-indigo-50 border shadow-sm border-indigo-100 transition-colors rounded-lg grid place-items-center p-4 mb-5 w-16 h-16 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="32" />
            </div>
            <h3 class="font-semibold text-lg text-gray-900">{item.title}</h3>
            <p class="text-slate-500 mt-2 text-base leading-relaxed">{item.description}</p>
          </div>
        </a>
      ))
    }
  </div>


  <div class="flex justify-center items-center mt-20"> 
    <a href="/features" class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150 w-full max-w-xs" style="box-shadow: 0 4px 6px rgba(90, 49, 196, 0.25);"> <!-- Added classes and inline styles to match the look -->
      <span>Explore All Features</span>
      <svg
        xmlns="http://www.w3.org/2000/svg" 
        viewBox="0 0 20 20"
        fill="currentColor"
        class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
        <path
          fill-rule="evenodd"
          d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
          clip-rule="evenodd"></path>
      </svg>
    </a>
  </div>

</Container>


  
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

