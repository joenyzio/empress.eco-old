---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "@components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
// import heroImage from "../../assets/hero-screenshot.png";
import IntegrationImg from "../../assets/integrations.svg?url";
import FeatureImgOne from "../../assets/features/2.png";
import FeatureImgTwo from "../../assets/features/2.png";
import FeatureImgThree from "../../assets/features/3.png";
import FeatureImg1 from "../../assets/features/6.png";
import FeatureImg2 from "../../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../../assets/employee.jpg";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import Education from "../../assets/features/education.svg";
import AutomatedMarketing from "../../assets/features/automated-marketing.svg";
import NetworkServerManagement from "../../assets/features/network-server-endpoint-management.svg";
import DashboardDevelopment from "../../assets/features/dashboard-development.png";

const { nomargin } = Astro.props;

// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

const apps = [
  {
    "title": "CRM",
    "description": "Customer relationship management",
    "icon": "fluent:people-add-24-regular",
    "link": "/app/sales/crm"
  },
  {
    "title": "Quotes",
    "description": "Generate customer quotes",
    "icon": "fluent:money-24-regular",
    "link": "/app/sales/quotes"
  },
  {
    "title": "Email",
    "description": "Targeted email campaigns ",
    "icon": "fluent:mail-copy-24-regular",
    "link": "/app/sales/quotes"
  },
  {
    "title": "Point of Sale",
    "description": "Retail transaction processing",
    "icon": "fluent:payment-24-regular",
    "link": "/app/sales/point-of-sale"
  },
  {
    "title": "Subscriptions",
    "description": "Manage recurring payments",
    "icon": "fluent:add-circle-24-regular",
    "link": "/app/sales/subscriptions"
  },
  {
    "title": "Rental",
    "description": "Equipment leasing solutions",
    "icon": "fluent:box-arrow-left-24-regular",
    "link": "/app/sales/rental"
  }
];


const data = [
  {
    "mainHeading": "Sales Empowerment",
    "subtext": "Unleash the full potential of your sales force with Empress solutions tailored for maximal revenue generation and customer satisfaction.",
    "headingButtons": [
      {
        "text": "Boost Your Sales",
        "link": "/contact"
      },
      {
        "text": "Sales Pricing Plans",
        "link": "/pricing"
      }
    ],
    "sectionHeading": "Ultimate Sales Tools",
    "offering": {
      "title": "Sales Optimization Redefined",
      "subtext": "Drive unprecedented sales performance with our intelligent sales platform, leveraging cutting-edge technology to enhance every customer interaction."
    },
    "valueBlocks": [
      {
        "heading": "Empress OS for Sales",
        "title": "Streamline Sales Processes",
        "description": "Leverage a unified system to manage all sales operations, ensuring no opportunity slips through the cracks."
      },
      {
        "heading": "Empress Chat for Sales",
        "title": "Engage Effectively",
        "description": "Connect instantly with prospects through real-time communication, providing timely assistance that closes deals."
      },
      {
        "heading": "Empress Insights for Sales",
        "title": "Data-Driven Decisions",
        "description": "Harness powerful analytics to understand customer needs, predict sales trends, and make informed strategic choices."
      }
    ],
    "featureBlocks": [
      {
        "heading": "OS for Sales",
        "title": "Centralize Your Sales Hub",
        "description": "Empress OS integrates all sales functions into a single, efficient platform, from customer management to deal closure.",
        "bulletPoints": [
          "Organize customer data for optimal access",
          "Automate sales tasks to increase productivity",
          "Sync all sales communication for seamless operation"
        ],
        "buttons": [
          {
            "text": "Optimize with Empress OS",
            "link": "/app/sales/crm"
          },
          {
            "text": "Discover Empress OS",
            "link": "/os-info"
          }
        ]
      },
      {
        "heading": "Chat for Sales",
        "title": "Improve Sales Interactions",
        "description": "Empress Chat connects your sales team with clients, offering real-time engagement and support to boost conversion rates.",
        "bulletPoints": [
          "Instant customer communication channel",
          "Faster response times to sales inquiries",
          "Personalized engagement for better customer relationships"
        ],
        "buttons": [
          {
            "text": "Enhance with Empress Chat",
            "link": "/app/sales/chat"
          },
          {
            "text": "Learn About Empress Chat",
            "link": "/chat-info"
          }
        ]
      },
      {
        "heading": "Insights for Sales",
        "title": "Craft Winning Sales Strategies",
        "description": "Empress Insights provides the data intelligence you need to outmaneuver the competition and drive sales growth.",
        "bulletPoints": [
          "Deep dive into sales metrics and KPIs",
          "Understand customer behaviors and patterns",
          "Adapt and evolve with market changes promptly"
        ],
        "buttons": [
          {
            "text": "Drive Growth with Empress Insights",
            "link": "/app/sales/insights"
          },
          {
            "text": "Explore Empress Insights",
            "link": "/insights-info"
          }
        ]
      }
    ],
    "featureHeading": "Sales Excellence with Empress",
    "featureTitle": "Your Partner in Sales Success",
    "featureAssurance": "Every Empress solution is crafted to not only meet but exceed the demanding needs of todayâ€™s sales teams."
  }
];


const features = [
  {
    "title": "Accelerate Sales Cycles",
    "description": "Speed up the sales pipeline with streamlined processes and automation. Empress OS ensures you capitalize on every opportunity swiftly.",
    "icon": "fluent:top-speed-24-regular",
  },
  {
    "title": "Universal Sales Access",
    "description": "Provide your sales team with omnipresent communication tools to engage clients on any platform, at any time.",
    "icon": "fluent:bot-24-regular",
  },
  {
    "title": "Gain Deep Sales Insights",
    "description": "With Empress Insights, dive into a deep analysis of sales trends and customer interactions to craft more effective sales strategies.",
    "icon": "fluent:cellular-data-1-24-regular",
  },
  {
    "title": "Integrate Data Seamlessly",
    "description": "Consolidate customer data across platforms with Empress OS, removing information silos and enhancing sales team efficiency.",
    "icon": "fluent:database-link-24-regular",
  },
  {
    "title": "Predict Customer Trends",
    "description": "Utilize predictive analytics to anticipate customer needs and market shifts, staying ahead of the curve with Empress Insights.",
    "icon": "fluent:inprivate-account-24-regular",
  },
  {
    "title": "Engage Clients Personally",
    "description": "Forge stronger relationships and drive sales with personalized engagement tools provided by Empress Chat.",
    "icon": "fluent:chat-bubbles-question-24-regular",
  }
];

const faq = [
  {
    "question": "How can Empress OS streamline our sales pipeline?",
    "answer": "Empress OS centralizes all your sales activities, from lead tracking to deal closure. It automates routine tasks, organizes data for optimal access, and synchronizes communications to ensure you can focus on building relationships and closing sales more efficiently."
  },
  {
    "question": "Is Empress Chat suitable for international sales teams?",
    "answer": "Absolutely. Empress Chat provides real-time communication capabilities across different platforms and time zones, ensuring your international sales teams can engage with clients effectively, regardless of their location."
  },
  {
    "question": "Can Empress Insights help with forecasting sales trends?",
    "answer": "Yes, Empress Insights employs advanced analytics to interpret sales data, customer behaviors, and market patterns, helping your team make data-driven decisions and forecast trends with greater accuracy."
  },
  {
    "question": "What kind of support does Empress OS offer for managing customer relationships?",
    "answer": "Empress OS offers a comprehensive CRM tool that helps you keep track of customer interactions, manage leads, and nurture client relationships, all in one platform to enhance customer satisfaction and loyalty."
  },
  {
    "question": "How does Empress ensure data privacy and security for sales transactions?",
    "answer": "Security is a priority for Empress. We employ robust encryption, compliance with industry standards, and regular security audits to ensure that all sales transactions and customer data are handled with the highest level of security and confidentiality."
  },
  {
    "question": "Can we integrate existing sales tools with Empress solutions?",
    "answer": "Certainly. Empress solutions are designed to be flexible and compatible with a variety of sales tools and systems. We provide seamless integration capabilities to ensure you can continue to use your existing resources alongside our platform."
  },
  {
    "question": "What makes Empress solutions stand out for sales professionals?",
    "answer": "Empress solutions stand out due to their holistic approach to sales enablement. We provide a suite of tools that cover every aspect of the sales process, from generating quotes and managing email campaigns to processing transactions and managing subscriptions, all designed to maximize efficiency and revenue generation."
  }
];



const featureBlocks = data[0].featureBlocks;

---


<Layout title="About" footerMargin={false}>
  
  <!-- <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div
            class="mt-6 flex flex-col sm:flex-row sm:justify-center lg:justify-start gap-3">
          <Link
              href={data[0].headingButtons[0].link}
              class="flex gap-1 items-center justify-center bg-brand"
              rel="noopener">
              {data[0].headingButtons[0].text}
          </Link>
          
          <Link
            size="lg"
            style="outline"
            rel="noopener"
            href={data[0].headingButtons[1].link}
            class="flex gap-1 items-center justify-center border-brand text-brand">
            {data[0].headingButtons[1].text}
          </Link>
          </div>
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={Education}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div> -->

  <Container>
  <div>
    <div
    class:list={[
      "max-w-4xl mx-auto flex flex-col items-center justify-center",
      !nomargin && "mt-24",
    ]}>
    <Badge color="purple">Welcome to Empress</Badge>
    <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
      Streamline Your <span class="text-indigo-600">Sales with Empress</span>
    </h2>
    <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
      Streamline your business management with an all-in-one suite to enhance productivity and drive growth.
    </p>
  </div>
  <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
    {
      apps.map((item) => (
        <a href={item.link} class="focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          <div class="flex flex-col gap-4 items-center group hover:bg-slate-50 hover:shadow-md rounded-lg transition-all md:-m-5 p-5 text-center shadow">
            <div class="bg-indigo-50 border shadow border-indigo-100 transition-colors rounded-lg grid place-items-center p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        </a>
      ))
    }
  </div>
  </div>
</Container>
  
  <div class="grid md:grid-cols-2 py-10"></div>
  

  <Container>
  

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../../../chemical-laboratory.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="">
        <LottieAnimation id="lottie" src="../../../../global-education.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>

      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[1].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-6">
          {data[0].featureBlocks[2].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                  <span>{button.text}</span>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                    <path
                      fill-rule="evenodd"
                      d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                      clip-rule="evenodd"></path>
                  </svg>
                </Link>
              );
            } else {
              return (
                <a 
                  href={button.link} 
                  class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                  {button.text}
                </a>
              );
            }
          })}
        </div>
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../../../nuclear-research-2.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

  <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
    <Badge color="purple">{data[0].sectionHeading}</Badge>
    <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
      {data[0].offering.title}
    </h2>
    <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
      {data[0].offering.subtext}
    </p>
  </div>

  <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
    <Card color="indigo" size="sm">
      <Fragment slot="image">
        <Picture
          src={NetworkServerManagement}
          alt="Feature image"
          formats={["avif", "webp"]}
          class="object-contain"
          loading="lazy"
        />
      </Fragment>
      <span slot="badge">{data[0].valueBlocks[0].heading}</span>
      <span slot="title">{data[0].valueBlocks[0].title}</span>
      <span slot="desc">{data[0].valueBlocks[0].description}</span>
    </Card>
    
    <Card color="purple" size="sm">
      <Fragment slot="image">
        <Picture
          src={AutomatedMarketing}
          alt="Feature image"
          formats={["avif", "webp"]}
          class="object-contain"
          loading="lazy"
        />
      </Fragment>
      <span slot="badge">{data[0].valueBlocks[1].heading}</span>
      <span slot="title">{data[0].valueBlocks[1].title}</span>
      <span slot="desc">{data[0].valueBlocks[1].description}</span>
    </Card>
    
    <Card size="sm">
      <Fragment slot="image">
        <!-- // svg image. cannot use <picture/> as of now -->
        <Image
          src={DashboardDevelopment}
          alt="Feature image"
          width="909"
          height="823"
          class="object-contain"
          loading="lazy"
        />
      </Fragment>
      <span slot="badge">{data[0].valueBlocks[2].heading}</span>
      <span slot="title">{data[0].valueBlocks[2].title}</span>
      <span slot="desc">{data[0].valueBlocks[2].description}</span>
    </Card>
  </div>

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

