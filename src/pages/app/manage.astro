---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "@components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../../assets/hero-screenshot.png";
import IntegrationImg from "../../assets/integrations.svg?url";
import FeatureImgOne from "../../assets/features/2.png";
import FeatureImgTwo from "../../assets/features/2.png";
import FeatureImgThree from "../../assets/features/3.png";
import FeatureImg1 from "../../assets/features/6.png";
import FeatureImg2 from "../../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../../assets/employee.jpg";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import Education from "../../assets/features/education.svg";
import AutomatedMarketing from "../../assets/features/automated-marketing.svg";
import NetworkServerManagement from "../../assets/features/network-server-endpoint-management.svg";
import DashboardDevelopment from "../../assets/features/dashboard-development.png";

const { nomargin } = Astro.props;

// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

const apps = [
  {
    "title": "Plan",
    "description": "Task planning and organization",
    "icon": "fluent:heart-24-regular",
    "link": "/manage/plan"
  },
  {
    "title": "Track",
    "description": "Project analysis and reporting",
    "icon": "fluent:heart-24-regular",
    "link": "/app/manage/track"
  },
  {
    "title": "Collaborate",
    "description": "Connect, communicate, and update",
    "icon": "fluent:heart-24-regular",
    "link": "/app/manage/collaborate"
  },
  {
    "title": "Approve",
    "description": "Permissions and approvals",
    "icon": "fluent:heart-24-regular",
    "link": "/app/manage/approve"
  },
  {
    "title": "Strategize",
    "description": "Manage and support users",
    "icon": "fluent:heart-24-regular",
    "link": "/app/manage/strategize"
  },
  {
    "title": "Optimize",
    "description": "Scale operations efficiently",
    "icon": "fluent:heart-24-regular",
    "link": "/app/manage/optimize"
  },
];


const data = [
  {
    "mainHeading": "Optimize Project Management with Empress",
    "subtext": "Harness AI-enhanced tools to streamline project workflows, improve team coordination, and ensure project success.",
    "headingButtons": [
      {
        "text": "Get Started",
        "link": "/contact"
      },
      {
        "text": "View Pricing",
        "link": "/pricing"
      }
    ],
    "sectionHeading": "Empress for Project Management",
    "offering": {
      "title": "Innovative Project Management Solutions",
      "subtext": "Transform your project management practices with AI-driven insights, enabling precise planning, execution, and delivery."
    },
    "valueBlocks": [
      {
        "heading": "Empress OS",
        "title": "Streamline Project Workflows",
        "description": "Unify project data, enhance team collaboration, and automate routine tasks for increased project efficiency and reduced time to delivery."
      },
      {
        "heading": "Empress Chat",
        "title": "Enhance Team Communication",
        "description": "Facilitate real-time communication within project teams and with stakeholders to keep projects on track and teams aligned."
      },
      {
        "heading": "Empress Insights",
        "title": "Inform Project Strategy",
        "description": "Leverage advanced analytics for project trend analysis, risk assessment, and performance metrics to drive informed decision-making."
      }
    ],
    "featureBlocks": [
      {
        "heading": "OS for Project Management",
        "title": "Centralize and Automate Project Tasks",
        "description": "Empower project teams with Empress OS to centralize project information, automate workflows, and facilitate seamless collaboration across all project stages.",
        "bulletPoints": [
          "Integrate project planning and resource management",
          "Automate task allocation and progress tracking",
          "Synchronize cross-departmental project efforts"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ]
      },
      {
        "heading": "Chat for Project Alignment",
        "title": "Communicate Effectively for Project Success",
        "description": "Utilize Empress Chat to maintain clear communication channels across project teams, enabling quick problem-solving and ensuring that all stakeholders are informed and engaged.",
        "bulletPoints": [
          "Provide real-time updates and gather team feedback",
          "Facilitate stakeholder engagement and updates",
          "Resolve project queries with AI-powered assistance"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ]
      },
      {
        "heading": "Insights for Project Precision",
        "title": "Make Data-Driven Project Decisions",
        "description": "Adopt a strategic edge with Empress Insights, utilizing comprehensive dashboards to track project health, anticipate risks, and capitalize on opportunities for improvement.",
        "bulletPoints": [
          "Analyze real-time project performance data",
          "Predict project outcomes and set benchmarks",
          "Optimize resource allocation based on historical data"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ]
      }
    ],
    "featureHeading": "Advanced Project Management Features",
    "featureTitle": "Elevate Your Project Execution",
    "featureAssurance": "Dedicated to empowering project teams with sophisticated, AI-enhanced project management tools for superior results."
  }
];


const features = [
  {
    "title": "Strategic Project Planning",
    "description": "Utilize AI-driven analytics to optimize project timelines and resources, ensuring every plan is streamlined for maximum efficiency and effectiveness.",
    "icon": "fluent:chart-multiple-24-regular"
  },
  {
    "title": "Real-Time Collaboration",
    "description": "Facilitate instant project updates and team collaboration through an integrated communication platform, keeping everyone on the same page.",
    "icon": "fluent:people-team-24-regular"
  },
  {
    "title": "Predictive Task Management",
    "description": "Implement AI forecasts to anticipate project bottlenecks, allocate resources effectively, and maintain steady progress with proactive task management.",
    "icon": "fluent:task-list-square-ltr-24-regular"
  },
  {
    "title": "Automated Workflow Optimization",
    "description": "Deploy intelligent automation to streamline project workflows, from initiation to delivery, ensuring a focus on value-added activities.",
    "icon": "fluent:bot-24-regular"
  },
  {
    "title": "Cross-Platform Project Integration",
    "description": "Achieve a cohesive project management environment with cross-platform integrations, simplifying the oversight of multiple project components.",
    "icon": "fluent:plug-connected-24-regular"
  },
  {
    "title": "Comprehensive Project Dashboards",
    "description": "Monitor project KPIs and progress with comprehensive dashboards, offering a centralized view for informed decision-making and control.",
    "icon": "fluent:data-trending-24-regular"
  }
]


const faq = [
  {
    "question": "How does Empress enhance traditional project management?",
    "answer": "Empress utilizes AI-driven analytics and machine learning to transform traditional project management. It streamlines workflows, enhances team collaboration, and provides real-time insights for more informed decision-making, ultimately leading to more successful project outcomes."
  },
  {
    "question": "What features does Empress OS offer for project management?",
    "answer": "Empress OS offers centralized project data management, automated task workflows, and seamless collaboration across all project stages. It integrates planning and resource management to synchronize efforts and track progress effectively."
  },
  {
    "question": "Can Empress Chat improve communication within my project team?",
    "answer": "Absolutely. Empress Chat is designed to maintain clear, real-time communication channels within project teams and with stakeholders. It facilitates instant updates, feedback collection, and quick resolution of queries, ensuring everyone stays aligned and informed."
  },
  {
    "question": "How does Empress Insights contribute to project strategy?",
    "answer": "Empress Insights delivers advanced analytics for risk assessment, trend analysis, and performance tracking. These data-driven insights allow teams to predict outcomes, set benchmarks, and optimize resource allocation, contributing to a more precise project strategy."
  },
  {
    "question": "In what ways can Empress' features save time and reduce project delivery cycles?",
    "answer": "Empress features AI-driven planning tools, predictive task management, and automated workflows that eliminate bottlenecks and redundancies. This efficiency accelerates delivery cycles and frees up time for teams to focus on high-impact project areas."
  },
  {
    "question": "How does the cross-platform integration feature work to manage projects?",
    "answer": "Empress’ cross-platform integration allows for seamless interaction between different software and tools used in project management. This creates a unified environment, reducing the complexity of managing multiple project components and ensuring data consistency."
  },
  {
    "question": "Can I track the progress of my projects in real-time with Empress?",
    "answer": "Yes, with Empress' comprehensive dashboards, you can monitor your project's key performance indicators (KPIs) and progress in real-time. These dashboards provide a centralized control point for tracking, reporting, and decision-making."
  }
]



const featureBlocks = data[0].featureBlocks;

---


<Layout title="About" footerMargin={false}>
  
  <!-- <div class="overflow-x-clip">
    <Container>
      <main class="grid lg:grid-cols-5 place-items-center relative">
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-200 right-0 top-0">
        </div>
        <div
          class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-200 right-56 top-10">
        </div>
        <div class="max-w-sm md:max-w-max lg:col-span-2">
          <h1
            class="text-3xl lg:text-4xl xl:text-6xl font-bold lg:tracking-tight xl:tracking-tighter [text-wrap:balance] text-center lg:text-start">
            {data[0].mainHeading}
          </h1>
          <p
            class="text-lg mt-4 max-w-lg text-slate-600 [text-wrap:balance] text-center lg:text-start">
            {data[0].subtext}
          </p>
          <div
            class="mt-6 flex flex-col sm:flex-row sm:justify-center lg:justify-start gap-3">
          <Link
              href={data[0].headingButtons[0].link}
              class="flex gap-1 items-center justify-center bg-brand"
              rel="noopener">
              {data[0].headingButtons[0].text}
          </Link>
          
          <Link
            size="lg"
            style="outline"
            rel="noopener"
            href={data[0].headingButtons[1].link}
            class="flex gap-1 items-center justify-center border-brand text-brand">
            {data[0].headingButtons[1].text}
          </Link>
          </div>
        </div>
        <div class="py-3 lg:col-span-3 lg:-mr-44">
          <Picture
            src={Education}
            alt="Astronaut in the air"
            formats={["avif", "webp"]}
            sizes="(max-width: 1024px) 100vw, 50vw"
            widths={[240, 540, 720, heroImage.width]}
            loading="eager"
            fetchpriority="high"
          />
        </div>
      </main>
    </Container>
  </div> -->

  <Container>

  <div>
    <div
    class:list={[
      "max-w-4xl mx-auto flex flex-col items-center justify-center",
      !nomargin && "mt-24",
    ]}>
    <Badge color="purple">Empress for Project Management</Badge>
    <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
      Optimize Your <span class="text-indigo-600">Projects with Empress</span>
    </h2>
    <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
      Streamline your business management with an all-in-one suite to enhance productivity and drive growth.
    </p>
  </div>
  <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
    {
      apps.map((item) => (
        <a href={item.link} class="focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          <div class="flex flex-col gap-4 items-center group hover:bg-slate-50 hover:shadow-md rounded-lg transition-all md:-m-5 p-5 text-center shadow">
            <div class="bg-indigo-50 border shadow border-indigo-100 transition-colors rounded-lg grid place-items-center p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        </a>
      ))
    }
  </div>
  </div>
  <div class="flex justify-center items-center mt-20"> <!-- Full screen height and center content -->
    <Link href="/manage/" size="sm" class="inline-flex items-center justify-center group gap-px">
      <span>Explore All Management Guides</span>
      <svg
        xmlns="http://www.w3.org/2000/svg" 
        viewBox="0 0 20 20"
        fill="currentColor"
        class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
        <path
          fill-rule="evenodd"
          d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
          clip-rule="evenodd"></path>
      </svg>
    </Link>
</Container>
  

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../../../chemical-laboratory.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="">
        <LottieAnimation id="lottie" src="../../../../global-education.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>

      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-6">
            {data[0].featureBlocks[1].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                    <span>{button.text}</span>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 20 20"
                      fill="currentColor"
                      class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                      <path
                        fill-rule="evenodd"
                        d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                        clip-rule="evenodd"></path>
                    </svg>
                  </Link>
                );
              } else {
                return (
                  <a 
                    href={button.link} 
                    class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>
        </div>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-3xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-6">
          {data[0].featureBlocks[2].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <Link href={button.link} size="sm" class="inline-flex items-center group gap-px">
                  <span>{button.text}</span>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    class="w-4 h-4 mt-px group-hover:translate-x-1 transition-transform">
                    <path
                      fill-rule="evenodd"
                      d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
                      clip-rule="evenodd"></path>
                  </svg>
                </Link>
              );
            } else {
              return (
                <a 
                  href={button.link} 
                  class="text-sm px-2 transition py-1 text-slate-600 hover:text-indigo-600 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-indigo-500 focus-visible:outline-none focus-visible:shadow-outline-indigo rounded-full">
                  {button.text}
                </a>
              );
            }
          })}
        </div>
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../../../nuclear-research-2.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

  <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
    <Badge color="purple">{data[0].sectionHeading}</Badge>
    <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
      {data[0].offering.title}
    </h2>
    <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
      {data[0].offering.subtext}
    </p>
  </div>

  <div class="grid md:grid-cols-2 lg:grid-cols-3 mt-10 gap-10">
    <Card color="indigo" size="sm">
      <Fragment slot="image">
        <Picture
          src={NetworkServerManagement}
          alt="Feature image"
          formats={["avif", "webp"]}
          class="object-contain"
          loading="lazy"
        />
      </Fragment>
      <span slot="badge">{data[0].valueBlocks[0].heading}</span>
      <span slot="title">{data[0].valueBlocks[0].title}</span>
      <span slot="desc">{data[0].valueBlocks[0].description}</span>
    </Card>
    
    <Card color="purple" size="sm">
      <Fragment slot="image">
        <Picture
          src={AutomatedMarketing}
          alt="Feature image"
          formats={["avif", "webp"]}
          class="object-contain"
          loading="lazy"
        />
      </Fragment>
      <span slot="badge">{data[0].valueBlocks[1].heading}</span>
      <span slot="title">{data[0].valueBlocks[1].title}</span>
      <span slot="desc">{data[0].valueBlocks[1].description}</span>
    </Card>
    
    <Card size="sm">
      <Fragment slot="image">
        <!-- // svg image. cannot use <picture/> as of now -->
        <Image
          src={DashboardDevelopment}
          alt="Feature image"
          width="909"
          height="823"
          class="object-contain"
          loading="lazy"
        />
      </Fragment>
      <span slot="badge">{data[0].valueBlocks[2].heading}</span>
      <span slot="title">{data[0].valueBlocks[2].title}</span>
      <span slot="desc">{data[0].valueBlocks[2].description}</span>
    </Card>
  </div>

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

