---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "@components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../../../assets/hero-screenshot.png";
import IntegrationImg from "../../../assets/integrations.svg?url";
import FeatureImgOne from "../../../assets/features/2.png";
import FeatureImgTwo from "../../../assets/features/2.png";
import FeatureImgThree from "../../../assets/features/3.png";
import FeatureImg1 from "../../../assets/features/6.png";
import FeatureImg2 from "../../../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../../../assets/employee.jpg";
import Logo from "../../../assets/logo-full.png";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import ECommerce from "../../../assets/features/buyer-standing-in-front-of-giant-smartphone-and-buying-goods-on-internet-store.svg";
import AutomatedMarketing from "../../../assets/features/automated-marketing.svg";
import NetworkServerManagement from "../../../assets/features/network-server-endpoint-management.svg";
import DashboardDevelopment from "../../../assets/features/dashboard-development.png";


// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

const { nomargin } = Astro.props;

const templates = [
  {
    "title": "Event Planning Checklist",
    "description": "Organize Events Efficiently",
    "icon": "fluent:megaphone-24-regular",
    "link": "/templates/event-planning-checklist"
  },
  {
    "title": "Event Registration System",
    "description": "Manage Registrations",
    "icon": "fluent:megaphone-24-regular",
    "link": "/templates/event-registration-system"
  },
  {
    "title": "Event Promotion Toolkit",
    "description": "Promote Events Effectively",
    "icon": "fluent:megaphone-24-regular",
    "link": "/templates/event-promotion-toolkit"
  },
  {
    "title": "Attendee Engagement Platform",
    "description": "Interact with Attendees",
    "icon": "fluent:people-24-regular",
    "link": "/templates/attendee-engagement-platform"
  },
  {
    "title": "Post-Event Survey",
    "description": "Collect Feedback",
    "icon": "fluent:megaphone-24-regular",
    "link": "/templates/post-event-survey"
  },
  {
    "title": "Event Performance Metrics",
    "description": "Measure Event Success",
    "icon": "fluent:megaphone-24-regular",
    "link": "/templates/event-performance-metrics"
  }
];



const data = [
  {
    "mainHeading": "Event Planning, Simplified",
    "subtext": "Easily organize promotional events.",
    "headingButtons": [
      {
        "text": "Plan Event",
        "link": "/contact"
      },
      {
        "text": "View Pricing",
        "link": "/pricing"
      }
    ],
    "sectionHeading": "Empress for Events",
    "offering": {
      "title": "Elevate Your Brand with Signature Events",
      "subtext": "Craft memorable events that capture your brandâ€™s essence and resonate with your target audience."
    },
    "valueBlocks": [
      {
        "heading": "Empress Events OS",
        "title": "Seamless Event Operations",
        "description": "Streamline your event planning and execution to deliver high-impact experiences that engage and excite attendees."
      },
      {
        "heading": "Empress Events Chat",
        "title": "Engage Participants Instantly",
        "description": "Utilize real-time communication to connect with event attendees, answer inquiries, and gather feedback on-the-go."
      },
      {
        "heading": "Empress Events Insights",
        "title": "Understand Your Audience",
        "description": "Leverage data from your events to gain insights into participant behavior, preferences, and engagement levels."
      }
    ],
    "featureBlocks": [
      {
        "heading": "OS for Events",
        "title": "Orchestrate Unforgettable Events",
        "description": "Coordinate all aspects of event management from a unified platform to ensure a cohesive and branded experience.",
        "bulletPoints": [
          "Centralize event scheduling and management",
          "Sync marketing efforts with event milestones",
          "Automate attendee communications for consistent messaging"
        ],
        "buttons": [
          {
            "text": "Get Started with Events OS",
            "link": "/contact-events-os"
          },
          {
            "text": "Events OS Pricing",
            "link": "/pricing-events-os"
          }
        ]
      },
      {
        "heading": "Chat for Events",
        "title": "Real-Time Interaction at Your Events",
        "description": "Provide a platform for attendees to interact, ask questions, and engage with your brand in real-time during events.",
        "bulletPoints": [
          "Offer live support and Q&A during events",
          "Facilitate networking opportunities for attendees",
          "Collect instant feedback to improve the event experience"
        ],
        "buttons": [
          {
            "text": "Activate Events Chat",
            "link": "/contact-events-chat"
          },
          {
            "text": "Events Chat Pricing",
            "link": "/pricing-events-chat"
          }
        ]
      },
      {
        "heading": "Insights for Events",
        "title": "Data-Driven Event Strategy",
        "description": "Capture and analyze event data to refine your approach, understand attendee needs, and drive better outcomes for future events.",
        "bulletPoints": [
          "Track engagement and participation metrics",
          "Assess the impact of promotional activities",
          "Predict trends and attendee interests for future planning"
        ],
        "buttons": [
          {
            "text": "Explore Events Insights",
            "link": "/contact-events-insights"
          },
          {
            "text": "Events Insights Pricing",
            "link": "/pricing-events-insights"
          }
        ]
      }
    ],
    "featureHeading": "Empress for Events",
    "featureTitle": "Your Partner in Event Success",
    "featureAssurance": "Our suite of event-focused tools empowers you to create, manage, and analyze events that leave a lasting impact on your audience."
  }
];


const features = [
  {
    "title": "Advanced Registration Systems",
    "description": "Offer a streamlined event registration process with customizable forms, real-time updates, and automated confirmations to ensure a smooth start to your event experience.",
    "icon": "fluent:ticket-diagonal-24-regular",
  },
  {
    "title": "Interactive Venue Mapping",
    "description": "Utilize interactive maps for event venues that allow attendees to navigate the space virtually, locate sessions, and find essential services effortlessly.",
    "icon": "fluent:location-24-regular",
  },
  {
    "title": "Live Polling and Feedback",
    "description": "Engage your audience with live polls and solicit instant feedback during events to make participative decisions and improve real-time engagement.",
    "icon": "fluent:poll-24-regular",
  },
  {
    "title": "Event Marketing Automation",
    "description": "Automate your event marketing campaigns with targeted emails, social media posts, and personalized reminders to boost attendance and engagement.",
    "icon": "fluent:mail-template-24-regular",
  },
  {
    "title": "Sponsorship and Exhibitor Management",
    "description": "Manage sponsor and exhibitor relationships with tools for booth selection, sponsorship tiers, and integrated payment solutions.",
    "icon": "fluent:money-24-regular",
  },
  {
    "title": "Post-Event Analytics and Reporting",
    "description": "Access comprehensive post-event reports that track metrics like attendance, engagement, and overall satisfaction to measure success and plan for future events.",
    "icon": "fluent:data-trending-24-regular",
  }
];

const faq = [
  {
    question: "How can I get started with organizing an event using Empress for Events?",
    answer: "Getting started is simple. Click on the 'Get Started' button on our events page, fill in your details, and our team will get in touch with you to guide you through the setup process and ensure you have all the tools you need for a successful event."
  },
  {
    question: "What kind of support can I expect for setting up the event registration system?",
    answer: "Our team provides full support in setting up your event's registration system. This includes creating custom forms, ensuring real-time updates, and setting up automated confirmations. Technical support is available at every step to ensure a smooth registration process."
  },
  {
    question: "Can I manage multiple events at the same time using Empress Events OS?",
    answer: "Absolutely. Empress Events OS is designed to handle multiple events simultaneously. With our centralized management system, you can schedule and track various events, manage communications, and sync your marketing efforts all from one platform."
  },
  {
    question: "How does Empress Events Chat enhance attendee engagement?",
    answer: "Empress Events Chat facilitates real-time interaction, providing a platform for live Q&A, networking, and immediate feedback. This tool allows you to engage with attendees directly, offering a more interactive and personalized event experience."
  },
  {
    question: "How can Empress Events Insights help me understand my audience better?",
    answer: "Empress Events Insights captures valuable data from your events, including participant behavior and engagement levels. This data is analyzed to provide actionable insights, helping you to understand your audience better and make informed decisions for future event strategies."
  },
  {
    question: "Is there a way to facilitate networking among event attendees?",
    answer: "Yes, through our Empress Events Chat feature, you can facilitate networking opportunities by creating chat rooms, topic-specific discussions, and connect attendees with similar interests or industries. This can greatly enhance the value your event offers to participants."
  },
  {
    question: "What kind of post-event analytics does Empress for Events provide?",
    answer: "After your event concludes, you'll have access to detailed analytics and reports that track attendance, participant engagement, session popularity, and overall satisfaction. These insights are crucial for measuring the success of your event and for planning future events with precision."
  }
];





const featureBlocks = data[0].featureBlocks;

---

<Layout title="Quote" footerMargin={false}>

  <Container>
    <div>
      <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
        <Badge color="purple">{data[0].featureHeading}</Badge>
        <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
          {data[0].mainHeading}
        </h2>
        <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
          {data[0].subtext}
        </p>
      </div>
      <div class="mt-6 flex justify-center gap-3">
        <Link href={data[0].headingButtons[0].link} class="flex gap-1 items-center justify-center bg-brand" rel="noopener">
          {data[0].headingButtons[0].text}
        </Link>
  
        <Link size="lg" style="outline" rel="noopener" href={data[0].headingButtons[1].link} class="flex gap-1 items-center justify-center border-brand text-brand">
          {data[0].headingButtons[1].text}
        </Link>
      </div>
    </div>
    <div class="w-full overflow-hidden py-3 mt-20">
      <Picture src={Logo} alt="Astronaut in the air" formats={["avif", "webp"]} sizes="100vw" width="100vw" loading="eager" fetchpriority="high" />
    </div>
  </Container>
  
  
  </div>
  

  <Container>
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].sectionHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].offering.title}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].offering.subtext}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        templates.map((item) => (
          <a href={item.link} class="focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            <div class="flex flex-col gap-4 items-center group hover:bg-slate-50 hover:shadow-md rounded-lg transition-all md:-m-5 p-5 text-center shadow">
              <div class="bg-indigo-50 border shadow border-indigo-100 transition-colors rounded-lg grid place-items-center p-2 w-10 h-10 shrink-0">
                <Icon class="text-indigo-500" name={item.icon} size="24" />
              </div>
              <div>
                <h3 class="font-semibold text-lg">{item.title}</h3>
                <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
              </div>
            </div>
          </a>
        ))
      }
    </div>

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>  
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../../../../../business-technology.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>


    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>  
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../../../../../auto-chat.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-10">
          {data[0].featureBlocks[0].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                  <span>{button.text}</span>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                    <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                  </svg>
                </a>
              );
            } else {
              return (
                <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                  {button.text}
                </a>
              );
            }
          })}
        </div>  
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../../../../../pie-chart-bar.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
      <Badge color="purple">{data[0].featureHeading}</Badge>
      <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
        {data[0].featureTitle}
      </h2>
      <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
        {data[0].featureAssurance}
      </p>
    </div>

    <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-16">
      {
        features.map((item) => (
          <div class="flex flex-col gap-4 items-start group hover:bg-slate-50 hover:border-slate-100 border border-transparent rounded-lg transition-all md:-m-5 p-5">
            <div class="mt-1 bg-indigo-50 border shadow shadow-indigo-100/50 border-indigo-100 transition-colors rounded-lg grid place-items-center  p-2 w-10 h-10 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="24" />
            </div>
            <div>
              <h3 class="font-semibold text-lg">{item.title}</h3>
              <p class="text-slate-500 mt-2 leading-relaxed">{item.description}</p>
            </div>
          </div>
        ))
      }
    </div>

  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  </Container>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

