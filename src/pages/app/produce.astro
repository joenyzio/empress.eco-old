---

import { getCollection } from "astro:content";
import Badge from "@components/ui/badge.astro";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Link from "@components/ui/link.astro";
import Cta from "@components/cta.astro";
import Card from "@components/card.astro";

import { Icon } from "astro-icon";
import ArrowIcon from "@components/ui/icons/arrow.astro"

import Logos from "@components/logos.astro";
import heroImage from "../../assets/hero-screenshot.png";
import IntegrationImg from "../../assets/integrations.svg?url";
import FeatureImgOne from "../../assets/features/2.png";
import FeatureImgTwo from "../../assets/features/2.png";
import FeatureImgThree from "../../assets/features/3.png";
import FeatureImg1 from "../../assets/features/6.png";
import FeatureImg2 from "../../assets/features/2.png";
import { Picture, Image } from "astro:assets";
import EmployeeImg from "../../assets/employee.jpg";
import LottieAnimation from "astro-integration-lottie/Lottie.astro";
import Education from "../../assets/features/education.svg";
import AutomatedMarketing from "../../assets/features/automated-marketing.svg";
import NetworkServerManagement from "../../assets/features/network-server-endpoint-management.svg";
import DashboardDevelopment from "../../assets/features/dashboard-development.png";

const { nomargin } = Astro.props;

// Filter team entries with 'draft: false' & date before current date
const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

const apps = [
  {
    "title": "Stock",
    "description": "Inventory tracking system",
    "icon": "fluent:tray-item-add-24-regular",
    "link": "/app/produce/stock",
    "button": "Start Production"
  },
  {
    "title": "Manufacture",
    "description": "Production planning control",
    "icon": "fluent:manufacturer-24-regular",
    "link": "/app/produce/manufacture",
    "button": "Start Production"
  },
  {
    "title": "Lifecycle",
    "description": "Product lifecycle management",
    "icon": "fluent:production-24-regular",
    "link": "/app/produce/lifecycle",
    "button": "Start Production"
  },
  {
    "title": "Purchase",
    "description": "Procurement management system",
    "icon": "fluent:shopping-bag-24-regular",
    "link": "/app/produce/purchase",
    "button": "Start Production"
  },
  {
    "title": "Maintenance",
    "description": "Equipment upkeep scheduler",
    "icon": "fluent:wrench-screwdriver-24-regular",
    "link": "/app/produce/maintenance",
    "button": "Start Production"
  },
  {
    "title": "Quality",
    "description": "Quality assurance protocols",
    "icon": "fluent:checkmark-starburst-24-regular",
    "link": "/app/produce/quality",
    "button": "Start Production"
  }
];


const data = [
  {
    "mainHeading": "Revolutionize Inventory & Manufacturing with Empress",
    "subtext": "Transform your inventory management and manufacturing processes with cutting-edge AI-driven analytics for maximized efficiency and productivity.",
    "headingButtons": [
      {
        "text": "Get Started",
        "link": "/contact"
      },
      {
        "text": "View Pricing",
        "link": "/pricing"
      }
    ],
    "sectionHeading": "Empress for Inventory & Manufacturing",
    "offering": {
      "title": "Next-Level Operational Excellence",
      "subtext": "Adopt an innovative approach to inventory management and manufacturing with a suite designed for precision and scalability."
    },
    "valueBlocks": [
      {
        "heading": "Empress OS",
        "title": "Streamline Production Workflows",
        "description": "Centralize your production data, synchronize operations, and automate manufacturing workflows to enhance productivity."
      },
      {
        "heading": "Empress Chat",
        "title": "Optimize Supply Chain Communication",
        "description": "Enhance communication with suppliers and customers for smoother operations, utilizing AI to manage inquiries and streamline service."
      },
      {
        "heading": "Empress Insights",
        "title": "Strategize with Smart Data",
        "description": "Inform your inventory decisions with smart analytics, optimizing stock levels and reducing waste through predictive insights."
      }
    ],
    "featureBlocks": [
      {
        "heading": "OS for Inventory & Manufacturing",
        "title": "Control and Visibility Over Your Operations",
        "description": "Empress OS offers unparalleled control and insights into your manufacturing and inventory, ensuring every decision is data-backed and every process optimized.",
        "bulletPoints": [
          "Track inventory levels in real-time",
          "Predictive analytics for demand forecasting",
          "Automate supply chain management"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ]
      },
      {
        "heading": "Chat for Supply Chain Excellence",
        "title": "Instant Communication, Seamless Integration",
        "description": "Use Empress Chat to facilitate instant, AI-assisted communication within the supply chain, reducing delays and enhancing partner relations.",
        "bulletPoints": [
          "Automate vendor and customer interactions",
          "Quickly address supply chain queries",
          "Maintain clear, consistent communication"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ]
      },
      {
        "heading": "Insights for Manufacturing Prowess",
        "title": "Make Informed Production Decisions",
        "description": "With Empress Insights, leverage deep analytics to optimize your manufacturing processes, predict maintenance, and reduce downtime.",
        "bulletPoints": [
          "Monitor production efficiency",
          "Analyze machine performance data",
          "Plan and predict maintenance for uninterrupted production"
        ],
        "buttons": [
          {
            "text": "Get Started",
            "link": "/contact"
          },
          {
            "text": "View Pricing",
            "link": "/pricing"
          }
        ]
      }
    ],
    "getStartedSection": {
      "badge": "Additional Features",
      "title": "Improve Support with Empress",
      "description": "Start shaping exceptional customer support with the essential tools you need."
    },
    "featureHeading": "Advanced Features for Inventory & Manufacturing",
    "featureTitle": "Master Your Production and Inventory",
    "featureAssurance": "At Empress, we're committed to equipping your business with the most sophisticated tools for a lean and proactive inventory and manufacturing operation."
  }
];


const features = [
  {
    "title": "Streamline",
    "description": "Optimize production flow",
    "icon": "fluent:flash-24-regular",
    "link": "/features/streamline"
  },
  {
    "title": "Analyze",
    "description": "Monitor production metrics",
    "icon": "fluent:cellular-data-1-24-regular",
    "link": "/features/analyze"
  },
  {
    "title": "Automate",
    "description": "Streamline manufacturing tasks",
    "icon": "fluent:bot-24-regular",
    "link": "/features/automate"
  },
  {
    "title": "Permission",
    "description": "Control inventory access",
    "icon": "fluent:lock-24-regular",
    "link": "/features/permission"
  },
  {
    "title": "Chat",
    "description": "Communicate in production",
    "icon": "fluent:chat-multiple-24-regular",
    "link": "/features/chat"
  },
  {
    "title": "Forecast",
    "description": "Predict inventory needs",
    "icon": "fluent:weather-sunny-low-24-regular",
    "link": "/features/forecast"
  },
  {
    "title": "Collaborate",
    "description": "Manage production teams",
    "icon": "fluent:people-team-24-regular",
    "link": "/features/collaborate"
  },
  {
    "title": "Integrate",
    "description": "Unify manufacturing systems",
    "icon": "fluent:plug-connected-24-regular",
    "link": "/features/integrate"
  }
];


const faq = [
  {
    "question": "How does Empress revolutionize inventory management?",
    "answer": "Empress revolutionizes inventory management by leveraging AI-driven analytics to predict inventory needs, automate stock level optimization, and minimize waste, resulting in maximized efficiency and cost savings."
  },
  {
    "question": "Can Empress OS integrate with my existing manufacturing systems?",
    "answer": "Yes, Empress OS is designed to seamlessly integrate with your existing manufacturing systems, providing a centralized platform for streamlined operations and real-time insights into your production processes."
  },
  {
    "question": "What advantages does Empress Chat offer for supply chain communication?",
    "answer": "Empress Chat offers the advantage of instant, AI-assisted communication, which helps reduce delays, automate interactions with vendors and customers, and maintain clear and consistent communication throughout the supply chain."
  },
  {
    "question": "How does Empress Insights enhance production decision-making?",
    "answer": "Empress Insights enhances production decision-making by providing deep analytics that allow you to monitor efficiency, analyze performance data, and predict maintenance needs, ensuring reduced downtime and more informed manufacturing strategies."
  },
  {
    "question": "In what ways does smart inventory management through Empress reduce waste?",
    "answer": "Smart inventory management through Empress uses AI to accurately forecast demand, preventing overstocking or stockouts, and ensuring that inventory levels are kept optimal, thus significantly reducing waste and associated costs."
  },
  {
    "question": "How does Empress ensure its platform supports global manufacturing operations?",
    "answer": "Empress ensures global support by providing a multilingual platform that caters to diverse manufacturing environments, allowing for clear communication and efficient operation across different regions and languages."
  },
  {
    "question": "Is the user interface of Empress conducive to on-the-go management for manufacturing?",
    "answer": "Yes, the Empress user interface is designed for on-the-go management, providing a consistent and intuitive experience across all devices, ensuring that you can efficiently interact with your manufacturing systems, whether you're on the factory floor or away from the site."
  }
]



const featureBlocks = data[0].featureBlocks;

---


<Layout title="Build" footerMargin={false}>
  <div class="overflow-x-clip mt-20">
  </Sectionhead>

  <Container>
    <div>
      <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center ">
        <Badge color="purple">{data[0].featureHeading}</Badge>
        <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
          {data[0].mainHeading}
        </h2>
        <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
          {data[0].subtext}
        </p>
      </div>
      <div class="grid sm:grid-cols-2 md:grid-cols-3 mt-16 gap-8 md:gap-10">
        {
          apps.map((item) => (
            <div class="flex flex-col items-center group hover:bg-slate-50 hover:shadow-lg rounded-lg transition-all p-6 text-center shadow-lg bg-white">
              <div class="bg-indigo-50 border shadow-sm border-indigo-100 transition-colors rounded-lg grid place-items-center p-4 mb-5 w-16 h-16 shrink-0">
                <Icon class="text-indigo-500" name={item.icon} size="32" />
              </div>
              <h3 class="font-semibold text-lg text-gray-900">{item.title}</h3>
              <p class="text-slate-500 mt-2 text-base leading-relaxed">{item.description}</p>
              <a href={item.link} class="mt-6 inline-block w-3/4 px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150" style="box-shadow: 0 4px 6px rgba(90, 49, 196, 0.25);">
                {item.button}
              </a>
            </div>
          ))
        }
      </div>
      
    </div>

  </Container>

  <Container>

  

    <!-- Feature 1 -->

    <div class="grid md:grid-cols-2 py-10">
      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[0].heading}</Badge>
          <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[0].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[0].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[0].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                    {button.text}
                  </a>
                );
              }
            })}
          </div>          
        </div>
      </div>
  
      <div class="container">
        <LottieAnimation id="lottie" src="../../../../job-announcement.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>
    </div>

    <!-- Feature 2 -->
    <div class="grid md:grid-cols-2 py-10">
      <div class="">
        <LottieAnimation id="lottie" src="../../../../global-market-2.json" autoplay="true" style="width: 100%; height: auto;"/>
      </div>

      <div class="grid place-items-center">
        <div class="max-w-lg">
          <Badge color="purple" class="-ml-px">{data[0].featureBlocks[1].heading}</Badge>
          <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
            {data[0].featureBlocks[1].title}
          </h3>
          <p class="mt-4 text-slate-600 [text-wrap:balance]">
            {data[0].featureBlocks[1].description}
          </p>
          <ul class="grid mt-6 text-left gap-y-4">
            {data[0].featureBlocks[1].bulletPoints.map((point) => (
              <li class="flex items-center gap-3 text-neutral-800">
                <Icon name="ph:check-circle-fill" class="w-5 h-5" />
                <span class="text-sm">{point}</span>
              </li>
            ))}
          </ul>
          <div class="flex items-center gap-4 mt-10">
            {data[0].featureBlocks[0].buttons?.map((button, index) => {
              if (index === 0) {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                    <span>{button.text}</span>
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                      <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                    </svg>
                  </a>
                );
              } else {
                return (
                  <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                    {button.text}
                  </a>
                );
              }
            })}
          </div> 
        </div>
      </div>
    </div>

  <!-- Feature 3 -->

  <div class="grid md:grid-cols-2 py-10">

    <div class="grid place-items-center">
      <div class="max-w-lg">
        <Badge color="purple" class="-ml-px">{data[0].featureBlocks[2].heading}</Badge>
        <h3 class="text-4xl font-bold mt-4 [text-wrap:balance]">
          {data[0].featureBlocks[2].title}
        </h3>
        <p class="mt-4 text-slate-600 [text-wrap:balance]">
          {data[0].featureBlocks[2].description}
        </p>
        <ul class="grid mt-6 text-left gap-y-4">
          {data[0].featureBlocks[2].bulletPoints.map((point) => (
            <li class="flex items-center gap-3 text-neutral-800">
              <Icon name="ph:check-circle-fill" class="w-5 h-5" />
              <span class="text-sm">{point}</span>
            </li>
          ))}
        </ul>
        <div class="flex items-center gap-4 mt-10">
          {data[0].featureBlocks[0].buttons?.map((button, index) => {
            if (index === 0) {
              return (
                <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150">
                  <span>{button.text}</span>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
                    <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"></path>
                  </svg>
                </a>
              );
            } else {
              return (
                <a href={button.link} class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md bg-white text-slate-600 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 shadow-md transition ease-in-out duration-150">
                  {button.text}
                </a>
              );
            }
          })}
        </div> 
      </div>
    </div>
    <div class="">
      <LottieAnimation id="lottie" src="../../../../data-analysis-2.json" autoplay="true" style="width: 100%; height: auto;"/>
    </div>
  </div>

  </Container>

  <Container>

    <div
    class:list={[
      "max-w-4xl mx-auto flex flex-col items-center justify-center",
      !nomargin && "mt-24",
    ]}>
    <Badge color="purple">{data[0].getStartedSection.badge}</Badge>
    <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-4 text-center">
      {data[0].getStartedSection.title}
    </h2>
    <p class="text-lg mt-4 text-slate-600 text-center [text-wrap:pretty]">
      {data[0].getStartedSection.description}
    </p>
  </div>

  <div class="grid sm:grid-cols-2 md:grid-cols-4 mt-16 gap-8 md:gap-10">
    {
      features.map((item) => (
        <a href={item.link} class="focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          <div class="flex flex-col items-center group hover:bg-slate-50 hover:shadow-lg rounded-lg transition-all p-6 text-center shadow-lg bg-white">
            <div class="bg-indigo-50 border shadow-sm border-indigo-100 transition-colors rounded-lg grid place-items-center p-4 mb-5 w-16 h-16 shrink-0">
              <Icon class="text-indigo-500" name={item.icon} size="32" />
            </div>
            <h3 class="font-semibold text-lg text-gray-900">{item.title}</h3>
            <p class="text-slate-500 mt-2 text-base leading-relaxed">{item.description}</p>
          </div>
        </a>
      ))
    }
  </div>


  <div class="flex justify-center items-center mt-20"> 
    <a href="/features" class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-normal rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600 shadow-md transition ease-in-out duration-150 w-full max-w-xs" style="box-shadow: 0 4px 6px rgba(90, 49, 196, 0.25);"> <!-- Added classes and inline styles to match the look -->
      <span>Explore All Features</span>
      <svg
        xmlns="http://www.w3.org/2000/svg" 
        viewBox="0 0 20 20"
        fill="currentColor"
        class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform">
        <path
          fill-rule="evenodd"
          d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
          clip-rule="evenodd"></path>
      </svg>
    </a>
  </div>

</Container>


  
  
    <div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center"></div>

  <Container>
    <Sectionhead>
      <Fragment slot="title">FAQ</Fragment>
      <Fragment slot="desc">Frequently asked questions</Fragment>
    </Sectionhead>
  
    <div class="grid divide-y divide-neutral-200 max-w-xl mx-auto mt-8">
      {faq.map(item => (
        <div class="py-5">
          <details class="group">
            <summary class="flex justify-between items-center font-medium cursor-pointer list-none">
              <span>{item.question}</span>
              <span class="transition group-open:rotate-180">
                <ArrowIcon />
              </span>
            </summary>
            <p class="text-neutral-600 mt-3 group-open:animate-fadeIn">
              {item.answer}
            </p>
          </details>
        </div>
      ))}
    </div>
  </Container>
  

  <Cta />
</Layout>

